from pyspark import SparkContext, SparkConf , StorageLevel
from pyspark.sql import SparkSession, HiveContext
from pyspark.sql.functions import *
from pyspark.sql.types import *
import logging
from dateutil.rrule import rrule, MONTHLY
from datetime import datetime
import json
from pyspark.sql import functions
import sys
from pyspark.sql import Row
from pyspark.sql.functions import concat, col, lit
from pyspark.sql.functions import udf
from pyspark.sql.functions import when, sum, avg, col
from pyspark.sql import functions as F, types as T
from pyspark.sql import functions as F
from pyspark.sql.functions import input_file_name ,monotonically_increasing_id
from pyspark.sql.functions import regexp_extract
from pyspark.sql.functions import col, to_date, date_format
from pyspark.sql.functions import split, explode
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import smtplib
from email.message import EmailMessage

class main() :
    def __init__(self):
        try :
             spark = SparkSession.builder \
                 .enableHiveSupport() \
                 .config('hive.exec.dynamic.partition', 'true') \
                 .config('hive.exec.dynamic.partition.mode', 'nonstrict') \
                 .config('hive.exec.max.dynamic.partitions', '10000') \
                 .getOrCreate()
             log4j = spark._jvm.org.apache.log4j
             log4j.LogManager.getRootLogger().setLevel(log4j.Level.ERROR)
             spark.sql('SET hive.warehouse.data.skiptrash=true;')
             spark.sql('set hive.exec.dynamic.partition.mode=nonstrict')
             spark.conf.set('spark.sql.cbo.enabled', True)
             spark.conf.set('spark.sql.cbo.join reorder.enabled', True)
             spark.conf.set("spark.sql.parquet.compression.codec", "zstd")
             spark.sql('set spark.sql.parquet.enableVectorizedReader=false')
             spark.sql('set spark.sql.sources.partitionOverwriteMode=dynamic')
             spark.sql("set spark.databricks.sql.files.prorateMaxPartitionBytes.enabled=false")
             spark.sql("set spark.sql.adaptive.coalescePartitions.enabled=false")
             spark.sql("set spark.sql.adaptive.enabled=false")

             dbutils.widgets.text("Custom_Settings", "")
             dbutils.widgets.text("TGT1_TBL", "")
             dbutils.widgets.text("STG1_TBL", "")
             dbutils.widgets.text("RULES_TBL", "")
             dbutils.widgets.text("STG3_TBL", "")
             dbutils.widgets.text("HISTORY_TBL", "")
             dbutils.widgets.text("DIM_AGENT_TBL", "")
             dbutils.widgets.text("IB_FUNNEL_TBL", "")
             dbutils.widgets.text("QRF_TBL", "")
             dbutils.widgets.text("OAC_CALL_CHAT_TBL", "")
             dbutils.widgets.text("DIM_COUNTRY", "")
             dbutils.widgets.text("CURRENT_QTR", "")
          
             Settings = dbutils.widgets.get("Custom_Settings")
             TGT1_TBL = dbutils.widgets.get("TGT1_TBL")
             STG1_TBL = dbutils.widgets.get("STG1_TBL")
             RULES_TBL = dbutils.widgets.get("RULES_TBL")
             STG3_TBL = dbutils.widgets.get("STG3_TBL")
             HISTORY_TBL = dbutils.widgets.get("HISTORY_TBL")
             DIM_AGENT_TBL = dbutils.widgets.get("DIM_AGENT_TBL")
             IB_FUNNEL_TBL = dbutils.widgets.get("IB_FUNNEL_TBL")
             QRF_TBL = dbutils.widgets.get("QRF_TBL")
             OAC_CALL_CHAT_TBL = dbutils.widgets.get("OAC_CALL_CHAT_TBL")
             DIM_COUNTRY = dbutils.widgets.get("DIM_COUNTRY")
             CURRENT_QTR = dbutils.widgets.get("CURRENT_QTR")
             

             Set_list = Settings.split(',')
             if len(Set_list)>0:
                 for i in Set_list:
                     if i != "":
                         print("spark.sql(+i+)")
                         spark.sql("""{i}""".format(i=i))
                
            #spark.conf.set("spark.sql.caseSensitive", "true")

#---------Creating dataframe/temp view for table table "b2b_phones.abdashbase_rules" and "b2b_phones.base_historic------------------------#
#---------------------------------adding basic tranformations and dimensions -------------------------------------------------------------#

             rules = spark.sql(""" 
             select 
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             case 
             when cc_segment = 'SIGN' then 'SIGN'
             when cc_segment = 'ACROBAT DC' then 'ACROBAT'
             when cc_segment = 'ACROBAT CC' then 'ACROBAT'
             when cc_segment = 'STUDENT' then 'K-12'
             when cc_segment = 'TEAM' and upper(PRODUCT_NAME) = 'SBST' then 'SUBSTANCE'
             when cc_segment = 'TEAM' and upper(PRODUCT_NAME) = 'FFLY' then 'FIREFLY'
             when cc_segment = 'TEAM' then 'CCT'
             when cc_segment = 'K12+EEA' then 'K-12'
             when cc_segment = 'STOCK' then 'STOCK'
             when cc_segment = 'INDIVIDUAL' and upper(PRODUCT_NAME) = 'FFLY' then 'FIREFLY'
             when cc_segment = 'INDIVIDUAL' then 'CONSUMER'
             else 'OTHERS'
             end as product_group,
             case 
             --when cc_segment = 'SIGN' and cc_phone_vs_web = 'VIP-PHONE' and PROMO_TYPE = 'AWS INTRO 20%' then 'SIGN Starter Pack'
             --when cc_segment = 'SIGN' and cc_phone_vs_web = 'VIP-PHONE' and PROMO_TYPE = 'AZURE INTRO 20%' then 'SIGN Starter Pack'
             --when cc_segment = 'SIGN' and cc_phone_vs_web = 'VIP-PHONE' and PROMO_TYPE = 'AWS 3K INTRO' then 'SIGN Starter Pack'
             when cc_segment = 'SIGN' and cc_phone_vs_web = 'VIP-PHONE' and PROMO_TYPE in ('AWS INTRO 20%','AZURE INTRO 20%','AWS 3K INTRO') then 'SIGN Starter Pack'
             when cc_segment = 'SIGN' then 'SIGN'
             when cc_segment = 'ACROBAT DC' and PROMO_TYPE = 'TEAM 50PK PROMO' then 'Acrobat 50 PK'
             when cc_segment = 'ACROBAT DC' and PROMO_TYPE = 'TEAM 25PK PROMO' then 'Acrobat 25 PK'
             when cc_segment = 'ACROBAT CC'  and PROMO_TYPE = 'TEAM 50PK PROMO' then 'Acrobat 50 PK'
             when cc_segment = 'ACROBAT CC' and PROMO_TYPE = 'TEAM 25PK PROMO' then 'Acrobat 25 PK'
             when cc_segment = 'ACROBAT DC' then 'ACROBAT' 
             when cc_segment = 'ACROBAT CC' then 'ACROBAT' 
             when cc_segment = 'TEAM' and PRODUCT_NAME = 'SBST' then 'SUBSTANCE'
             when cc_segment = 'TEAM' and PRODUCT_NAME = 'FFLY' then 'FIREFLY'
             when cc_segment = 'TEAM' and PRODUCT_NAME = 'CCEX' then 'Express'
             when cc_segment = 'TEAM' then 'CCT'
             when cc_segment = 'STOCK' and PRODUCT_NAME = 'STEL' then 'Stock Credit Packs'
             when cc_segment = 'STOCK' then 'STOCK'
             when cc_segment = 'INDIVIDUAL' and PRODUCT_NAME = 'CCEX' then 'Express'
             when cc_segment = 'INDIVIDUAL' and PRODUCT_NAME = 'FFLY' then 'FIREFLY'
             when cc_segment = 'INDIVIDUAL' then 'CONSUMER'
             when cc_segment = 'STUDENT' and PRODUCT_NAME = 'CCEX' then 'Express'
             when cc_segment = 'STUDENT' then 'K-12'
             when cc_segment = 'K12+EEA' then 'K-12'
             when PRODUCT_NAME = 'CCEX' then 'Express'
             else 'OTHERS'
             end as sub_product_group,
             STYPE,
             sales_document,
             projected_dme_gtm_segment,
             product_name_description,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             PROMO_TYPE,
             SALES_DISTRICT,
             upper(trim(Sales_Center)) as Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             case when RepManger = 'UNKNOWN' then coalesce(Manager, 'UNKNOWN')
             else RepManger
             end RepManger,
             TeamKey,
             Txns,
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc,
             addl_purchase_diff,
             addl_purchase_same,
             gross_cancel_arr_cfx,
             gross_new_arr_cfx,
             gross_new_subs,
             init_purchase_arr_cfx,
             migrated_from_arr_cfx,
             migrated_to_arr_cfx,
             net_cancelled_arr_cfx,
             net_new_arr_cfx,
             net_new_subs,
             net_purchases_arr_cfx,
             reactivated_arr_cfx,
             returns_arr_cfx,
             renewal_from_arr_cfx,
             renewal_to_arr_cfx,
             net_purchases_arr_cfx_unclaimed,
             gross_new_arr_cfx_unclaimed,
             ((migrated_to_arr_cfx - migrated_from_arr_cfx) + (renewal_to_arr_cfx - renewal_from_arr_cfx)) as  net_migration_arr_cfx,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx >= 5000 then net_purchases_arr_cfx else 0 end net_purchases_arr_gt_5K,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx > 0  and net_purchases_arr_cfx < 5000 then net_purchases_arr_cfx else 0 end  net_purchases_arr_ls_5K,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx >= 5000 then 1 else 0 end orders_gt_5K,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx > 0  and net_purchases_arr_cfx < 5000 then 1 else 0 end orders_ls_5K,
             sum(CASE WHEN txns in ('Rep-Add on','Initial Purchase','UNKNOWN') then net_purchases_arr_cfx else 0 END)  OVER (partition by sales_document,FISCAL_YR_AND_WK_DESC ORDER BY sales_document) as net_purchases_arr_cfx_overall_arr,
             sum(CASE WHEN txns in ('Rep-Add on','Initial Purchase','UNKNOWN') then net_cancelled_arr_cfx else 0 END)  OVER (partition by sales_document,FISCAL_YR_AND_WK_DESC ORDER BY sales_document) as net_cancelled_arr_cfx_overall_arr
             from
             (select * from  {RULES_TBL} where event = 'RULES' and TeamKey <> 'WEB NOT APPLICABLE' ) a
             left outer join
             (select distinct country_code_iso2,market_area_description from {DIM_COUNTRY}) b
             on a.SALES_DISTRICT = b.country_code_iso2
             left outer join 
             (select Team_Key, Manager,Quarter,rn from (
             select row_number() over (partition by Team_Key,Quarter order by Team_Key) as rn , Team_Key, Manager,Quarter  from 
             (select distinct Team_Key, Manager,Quarter from {DIM_AGENT_TBL} )
             ) where rn = 1 ) c
             on upper(a.TeamKey) = upper(c.Team_key) and a.fiscal_yr_and_qtr_desc = c.Quarter  """.format(CURRENT_QTR = CURRENT_QTR, RULES_TBL = RULES_TBL,DIM_COUNTRY = DIM_COUNTRY,DIM_AGENT_TBL = DIM_AGENT_TBL ))
             rules.createOrReplaceTempView("rules")

             historic = spark.sql("""
             select
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             case when cc_segment = 'SIGN' then 'SIGN'
             when cc_segment = 'ACROBAT DC' then 'ACROBAT'
             when cc_segment = 'STUDENT' then 'K-12'
             when cc_segment = 'TEAM' and upper(product_name_description) like '%SUBSTANCE%' then 'SUBSTANCE'
             when cc_segment = 'TEAM' then 'CCT'
             when cc_segment = 'K12+EEA' then 'K-12'
             when cc_segment = 'ACROBAT CC' then 'ACROBAT'
             when cc_segment = 'STOCK' then 'STOCK'
             when cc_segment = 'INDIVIDUAL' then 'CONSUMER'
             else 'OTHERS'
             end as product_group,
             'UNKNOWN' as sub_product_group,
             'UNKNOWN' as STYPE,
             sales_document,
             projected_dme_gtm_segment,
             product_name_description,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             SALES_DISTRICT,
             case
             when Sales_Center = 'JAPAN' then 'JAPAN'
             when Sales_Center = 'LATAM' then 'LATAM'
             when Sales_Center = 'CNX' then 'EBD'
             when Sales_Center = 'GBD' then 'GBD'
             when Sales_Center = 'CNX-APAC' then 'APAC'
             when Sales_Center = 'TP-APAC' then 'APAC'
             else 'UNKNOWN'
             end as Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             TeamKey,
             Txns,
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc,
             addl_purchase_diff,
             addl_purchase_same,
             gross_cancel_arr_cfx,
             gross_new_arr_cfx,
             gross_new_subs,
             init_purchase_arr_cfx,
             migrated_from_arr_cfx,
             migrated_to_arr_cfx,
             net_cancelled_arr_cfx,
             net_new_arr_cfx,
             net_new_subs,
             net_purchases_arr_cfx,
             reactivated_arr_cfx,
             returns_arr_cfx,
             renewal_from_arr_cfx,
             renewal_to_arr_cfx,
             net_purchases_arr_cfx_unclaimed,
             gross_new_arr_cfx_unclaimed,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx >= 5000 then net_purchases_arr_cfx else 0 end net_purchases_arr_gt_5K,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx > 0  and net_purchases_arr_cfx < 5000 then net_purchases_arr_cfx else 0 end  net_purchases_arr_ls_5K,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx >= 5000 then 1 else 0 end orders_gt_5K,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx > 0  and net_purchases_arr_cfx < 5000 then 1 else 0 end orders_ls_5K,
             sum(CASE WHEN txns in ('Rep-Add on','Initial Purchase','UNKNOWN') then net_purchases_arr_cfx else 0 END)  OVER (partition by sales_document,FISCAL_YR_AND_WK_DESC ORDER BY sales_document) as net_purchases_arr_cfx_overall_arr,
             sum(CASE WHEN txns in ('Rep-Add on','Initial Purchase','UNKNOWN') then net_cancelled_arr_cfx else 0 END)  OVER (partition by sales_document,FISCAL_YR_AND_WK_DESC ORDER BY sales_document) as net_cancelled_arr_cfx_overall_arr
             from {HISTORY_TBL} """.format(HISTORY_TBL =  HISTORY_TBL))
             historic.createOrReplaceTempView("historic")
             
            
#---------Transforming dataframe/temp view into same shape for union---------#
             
             df_base = spark.sql("""
             select 
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             product_name_description,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             PROMO_TYPE,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             TeamKey,
             Txns,
             'UNKNOWN' as Language,
             'UNKNOWN' as Channel,
             'UNKNOWN' as Surface_app_id,
             'UNKNOWN' as queue,
             'UNKNOWN' as queue_type,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr <=2500 then '<=2500'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >2500 and net_purchases_arr_cfx_item_arr <=5000 then '2500-5000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >5000 and net_purchases_arr_cfx_item_arr <=10000 then '5000-10000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >10000 and net_purchases_arr_cfx_item_arr <=20000 then '10000-20000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >20000 and  net_purchases_arr_cfx_item_arr <=50000 then '20000-50000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >50000 then '>50000'
             else 'UNKNOWN'
             end net_purchases_deal_band,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr <=2500 then '<=2500'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >2500 and net_cancelled_arr_cfx_item_arr <=5000 then '2500-5000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >5000 and net_cancelled_arr_cfx_item_arr <=10000 then '5000-10000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >10000 and net_cancelled_arr_cfx_item_arr <=20000 then '10000-20000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >20000 and net_cancelled_arr_cfx_item_arr <=50000 then '20000-50000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >50000  then '>50000'
             else 'UNKNOWN'
             end net_cancelled_deal_band,             
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr <=2500 then '<=2500'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >2500 and net_purchases_arr_cfx_overall_arr <=5000 then '2500-5000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >5000 and net_purchases_arr_cfx_overall_arr <=10000 then '5000-10000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >10000 and net_purchases_arr_cfx_overall_arr <=20000 then '10000-20000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >20000 and net_purchases_arr_cfx_overall_arr <=50000 then '20000-50000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >50000  then '>50000'
             else 'UNKNOWN'
             end net_purchases_deal_band_overall,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr <=2500 then '<=2500'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >2500 and net_cancelled_arr_cfx_overall_arr <=5000 then '2500-5000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >5000 and net_cancelled_arr_cfx_overall_arr <=10000 then '5000-10000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >10000 and net_cancelled_arr_cfx_overall_arr <=20000 then '10000-20000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >20000 and net_cancelled_arr_cfx_overall_arr <=50000 then '20000-50000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >50000  then '>50000'
             else 'UNKNOWN'
             end net_cancelled_deal_band_overall,
             'UNKNOWN' as transfer_in_Queue,
             'UNKNOWN' as transfer_in_Agent,
             'UNKNOWN' as transfer_out_Queue,
             'UNKNOWN' as transfer_out_Agent,
             0 as entered,
             0 as offered,
             0 as accepeted,
             0 as abandoned,
             0 as Non_Interactive,
             0 as Wrap_time_min,
             0 as Talk_time_min,
             0 as transfer_in,
             0 as transfer_out,
             0 as Incremental_arr,
             0 as Incremental_arr_customer_addon,
             sum(addl_purchase_diff) as addl_purchase_diff,
             sum(addl_purchase_same) as addl_purchase_same,
             sum(gross_cancel_arr_cfx) as gross_cancel_arr_cfx,
             sum(gross_new_arr_cfx) as gross_new_arr_cfx,
             sum(gross_new_subs) as gross_new_subs,
             sum(init_purchase_arr_cfx) as init_purchase_arr_cfx,
             sum(migrated_from_arr_cfx) as migrated_from_arr_cfx,
             sum(migrated_to_arr_cfx) as migrated_to_arr_cfx,
             sum(net_cancelled_arr_cfx) as net_cancelled_arr_cfx,
             sum(net_new_arr_cfx) as net_new_arr_cfx,
             sum(net_new_subs) as net_new_subs,
             sum(net_purchases_arr_cfx) as net_purchases_arr_cfx,
             sum(net_purchases_arr_gt_5K) as net_purchases_arr_gt_5K,
             sum(net_purchases_arr_ls_5K) as net_purchases_arr_ls_5K,
             sum(orders_gt_5K) as orders_gt_5K,
             sum(orders_ls_5K) as orders_ls_5K,
             sum(reactivated_arr_cfx) as reactivated_arr_cfx,
             sum(returns_arr_cfx) as returns_arr_cfx,
             sum(renewal_from_arr_cfx) as renewal_from_arr_cfx,
             sum(renewal_to_arr_cfx) as renewal_to_arr_cfx,
             sum(net_purchases_arr_cfx_unclaimed) as net_purchases_arr_cfx_unclaimed,
             sum(gross_new_arr_cfx_unclaimed) as gross_new_arr_cfx_unclaimed,
             sum(net_migration_arr_cfx) as  net_migration_arr_cfx,
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc
             from 
             (select 
             *,
             sum(CASE WHEN txns in ('Rep-Add on','Initial Purchase','UNKNOWN') then net_purchases_arr_cfx else 0 END)  OVER (partition by sales_document,product_group,FISCAL_YR_AND_WK_DESC ORDER BY sales_document) as net_purchases_arr_cfx_item_arr,
             sum(CASE WHEN txns in ('Rep-Add on','Initial Purchase','UNKNOWN') then net_cancelled_arr_cfx else 0 END)  OVER (partition by sales_document,product_group,FISCAL_YR_AND_WK_DESC ORDER BY sales_document) as net_cancelled_arr_cfx_item_arr
             from rules )
             group by
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             product_name_description,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             PROMO_TYPE,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             TeamKey,
             Txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc
             """.format(CURRENT_QTR = CURRENT_QTR, RULES_TBL = RULES_TBL ))
             df_base.createOrReplaceTempView("df_base")

             df_historic = spark.sql("""
             select 
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             product_name_description,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             'UNKNOWN' as PROMO_TYPE,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             TeamKey,
             Txns,
             'UNKNOWN' as Language,
             'UNKNOWN' as Channel,
             'UNKNOWN' as Surface_app_id,
             'UNKNOWN' as queue,
             'UNKNOWN' as queue_type,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr <=2500 then '<=2500'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >2500 and net_purchases_arr_cfx_item_arr <=5000 then '2500-5000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >5000 and net_purchases_arr_cfx_item_arr <=10000 then '5000-10000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >10000 and net_purchases_arr_cfx_item_arr <=20000 then '10000-20000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >20000 and net_purchases_arr_cfx_item_arr <=50000 then '20000-50000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_item_arr >50000 then '>50000'
             else 'UNKNOWN'
             end net_purchases_deal_band,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr <=2500 then '<=2500'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >2500 and net_cancelled_arr_cfx_item_arr <=5000 then '2500-5000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >5000 and net_cancelled_arr_cfx_item_arr <=10000 then '5000-10000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >10000 and net_cancelled_arr_cfx_item_arr <=20000 then '10000-20000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >20000 and net_cancelled_arr_cfx_item_arr <=50000 then '20000-50000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_item_arr >50000  then '>50000'
             else 'UNKNOWN'
             end net_cancelled_deal_band,             

             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr <=2500 then '<=2500'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >2500 and net_purchases_arr_cfx_overall_arr <=5000 then '2500-5000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >5000 and net_purchases_arr_cfx_overall_arr <=10000 then '5000-10000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >10000 and net_purchases_arr_cfx_overall_arr <=20000 then '10000-20000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >20000 and net_purchases_arr_cfx_overall_arr <=50000 then '20000-50000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_purchases_arr_cfx_overall_arr >50000  then '>50000'
             else 'UNKNOWN'
             end net_purchases_deal_band_overall,
             case when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr <=2500 then '<=2500'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >2500 and net_cancelled_arr_cfx_overall_arr <=5000 then '2500-5000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >5000 and net_cancelled_arr_cfx_overall_arr <=10000 then '5000-10000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >10000 and net_cancelled_arr_cfx_overall_arr <=20000 then '10000-20000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >20000 and net_cancelled_arr_cfx_overall_arr <=50000 then '20000-50000'
             when txns in ('Rep-Add on','Initial Purchase','UNKNOWN') and net_cancelled_arr_cfx_overall_arr >50000  then '>50000'
             else 'UNKNOWN'
             end net_cancelled_deal_band_overall,
             'UNKNOWN' as transfer_in_Queue,
             'UNKNOWN' as transfer_in_Agent,
             'UNKNOWN' as transfer_out_Queue,
             'UNKNOWN' as transfer_out_Agent,
             0 as entered,
             0 as offered,
             0 as accepeted,
             0 as abandoned,
             0 as Non_Interactive,
             0 as Wrap_time_min,
             0 as Talk_time_min,
             0 as transfer_in,
             0 as transfer_out,
             0 as Incremental_arr,
             0 as Incremental_arr_customer_addon,
             sum(addl_purchase_diff) as addl_purchase_diff,
             sum(addl_purchase_same) as addl_purchase_same,
             sum(gross_cancel_arr_cfx) as gross_cancel_arr_cfx,
             sum(gross_new_arr_cfx) as gross_new_arr_cfx,
             sum(gross_new_subs) as gross_new_subs,
             sum(init_purchase_arr_cfx) as init_purchase_arr_cfx,
             sum(migrated_from_arr_cfx) as migrated_from_arr_cfx,
             sum(migrated_to_arr_cfx) as migrated_to_arr_cfx,
             sum(net_cancelled_arr_cfx) as net_cancelled_arr_cfx,
             sum(net_new_arr_cfx) as net_new_arr_cfx,
             sum(net_new_subs) as net_new_subs,
             sum(net_purchases_arr_cfx) as net_purchases_arr_cfx,
             sum(net_purchases_arr_gt_5K) as net_purchases_arr_gt_5K,
             sum(net_purchases_arr_ls_5K) as net_purchases_arr_ls_5K,
             sum(orders_gt_5K) as orders_gt_5K,
             sum(orders_ls_5K) as orders_ls_5K,
             sum(reactivated_arr_cfx) as reactivated_arr_cfx,
             sum(returns_arr_cfx) as returns_arr_cfx,
             sum(renewal_from_arr_cfx) as renewal_from_arr_cfx,
             sum(renewal_to_arr_cfx) as renewal_to_arr_cfx,
             sum(net_purchases_arr_cfx_unclaimed) as net_purchases_arr_cfx_unclaimed,
             sum(gross_new_arr_cfx_unclaimed) as gross_new_arr_cfx_unclaimed,
             ((sum(migrated_to_arr_cfx) - sum(migrated_from_arr_cfx)) + (sum(renewal_to_arr_cfx) - sum(renewal_from_arr_cfx))) as net_migration_arr_cfx,
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc
             from 
             (
             select *,
             sum(CASE WHEN txns in ('Rep-Add on','Initial Purchase','UNKNOWN') then net_purchases_arr_cfx else 0 END)  OVER (partition by sales_document,product_group,FISCAL_YR_AND_WK_DESC ORDER BY sales_document) as net_purchases_arr_cfx_item_arr,
             sum(CASE WHEN txns in ('Rep-Add on','Initial Purchase','UNKNOWN') then net_cancelled_arr_cfx else 0 END)  OVER (partition by sales_document,product_group,FISCAL_YR_AND_WK_DESC ORDER BY sales_document) as net_cancelled_arr_cfx_item_arr
             from historic
             )
             group by
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             product_name_description,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             TeamKey,
             Txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc
             """.format(HISTORY_TBL =  HISTORY_TBL))
             df_historic.createOrReplaceTempView("df_historic")  

             df_ib_voice_chat_from_file = spark.sql("""
             select 
             case when geo_code = 'JAPAN' then 'JPN' else geo_code end geo,
             a.Market_Area_Code as MARKET_AREA,
             a.Market_Area_Desc as market_area_description,
             'UNKNOWN' as MARKET_SEGMENT,
             'UNKNOWN' as cc_phone_vs_web,
             'UNKNOWN' as cc_segment,
             'UNKNOWN' as product_group,
             'UNKNOWN' as sub_product_group,
             'UNKNOWN' as STYPE,
             'UNKNOWN' as projected_dme_gtm_segment,
             'UNKNOWN' as product_name_description,
             'UNKNOWN' as gtm_acct_segment,
             'UNKNOWN' as route_to_market,
             'UNKNOWN' as PROMOTION,
             'UNKNOWN' as PROMO_TYPE,
             'UNKNOWN' as SALES_DISTRICT,
             coalesce(a.sales_Center,'UNKNOWN') as Sales_Center,
             coalesce(c.Rep_name,'UNKNOWN') as RepName,
             a.Ldap as con_RepLdap,
             coalesce(c.RepTSM,'UNKNOWN') as RepTSM,
             coalesce(c.RepManger,d.RepManger,'UNKNOWN') as RepManger,
             b.Team_key as TeamKey,
             'UNKNOWN' as Txns,
             a.Language as Language,
             upper(a.Channel) as Channel,
             a.Surface_app_ID as Surface_app_id,
             a.queue as queue,
             a.queue_type as queue_type,
             'UNKNOWN' as net_purchases_deal_band,
             'UNKNOWN' as net_cancelled_deal_band,
             'UNKNOWN' as net_purchases_deal_band_overall,
             'UNKNOWN' as net_cancelled_deal_band_overall,
             'UNKNOWN' as transfer_in_Queue,
             'UNKNOWN' as transfer_in_Agent,
             'UNKNOWN' as transfer_out_Queue,
             'UNKNOWN' as transfer_out_Agent,
             a.Entered as entered,
             0 as offered,
             a.accepeted as accepeted,
             a.abandoned as abandoned,
             a.Non_Interactive as Non_Interactive,
             a.Wrap_time_Sec/60 as Wrap_time_min,
             a.Talk_time_Sec/60 as Talk_time_min,
             0 as transfer_in,
             0 as transfer_out,
             0 as Incremental_arr,
             0 as Incremental_arr_customer_addon,
             0 as addl_purchase_diff,
             0 as addl_purchase_same,
             0 as gross_cancel_arr_cfx,
             0 as gross_new_arr_cfx,
             0 as gross_new_subs,
             0 as init_purchase_arr_cfx,
             0 as migrated_from_arr_cfx,
             0 as migrated_to_arr_cfx,
             0 as net_cancelled_arr_cfx,
             0 as net_new_arr_cfx,
             0 as net_new_subs,
             0 as net_purchases_arr_cfx,
             0 as net_purchases_arr_gt_5K,
             0 as net_purchases_arr_ls_5K,
             0 as orders_gt_5K,
             0 as orders_ls_5K,
             0 as reactivated_arr_cfx,
             0 as returns_arr_cfx,
             0 as renewal_from_arr_cfx,
             0 as renewal_to_arr_cfx,
             0 as net_purchases_arr_cfx_unclaimed,
             0 as gross_new_arr_cfx_unclaimed,
             0 as net_migration_arr_cfx,
             a.fiscal_yr_and_qtr_desc as fiscal_yr_and_qtr_desc,
             a.fiscal_yr_and_wk_desc as fiscal_yr_and_wk_desc
             from (select * from {IB_FUNNEL_TBL} where (fiscal_yr_and_wk_desc <= '2023-36') OR (upper(Channel)='VOICE' and Sales_Center='LATAM')) a
             left outer join (select distinct Team_key,Standard_team_name, Team_category from b2b_phones.dim_team ) b
             on upper(a.rep_team) = upper(b.Standard_team_name)
             left outer join 
             (select distinct upper(ldap) as ldap ,upper(Rep_name) as Rep_name,upper(Sales_Center) as Sales_Center,upper(TSM) as RepTSM,upper(Manager) as RepManger,Quarter from b2b_phones.dim_agent_details 
             ) c
             on upper(a.ldap) = upper(c.ldap) and a.fiscal_yr_and_qtr_desc=c.Quarter
             left outer join
             (select distinct Standard_team_name,upper(Manager) as RepManger,Quarter from b2b_phones.dim_agent_details  ) d
             on upper(trim(a.rep_team)) = upper(trim(d.Standard_team_name))  and a.fiscal_yr_and_qtr_desc = d.Quarter                 
             """.format(CURRENT_QTR = CURRENT_QTR,IB_FUNNEL_TBL=IB_FUNNEL_TBL,STG3_TBL = STG3_TBL ))
             df_ib_voice_chat_from_file.createOrReplaceTempView('df_ib_voice_chat_from_file') 

             df_ib_voice_chat = spark.sql("""
             select 
             case when geo = 'JAPAN' then 'JPN' else geo end geo,
             a.Market_Area_Code as MARKET_AREA,
             a.Market_Areas_Desc as market_area_description,
             'UNKNOWN' as MARKET_SEGMENT,
             'UNKNOWN' as cc_phone_vs_web,
             'UNKNOWN' as cc_segment,
             'UNKNOWN' as product_group,
             'UNKNOWN' as sub_product_group,
             'UNKNOWN' as STYPE,
             'UNKNOWN' as projected_dme_gtm_segment,
             'UNKNOWN' as product_name_description,
             'UNKNOWN' as gtm_acct_segment,
             'UNKNOWN' as route_to_market,
             'UNKNOWN' as PROMOTION,
             'UNKNOWN' as PROMO_TYPE,
             'UNKNOWN' as SALES_DISTRICT,
             coalesce(upper(a.sales_centre),'UNKNOWN') as Sales_Center,
             coalesce(upper(a.agent_csam),'UNKNOWN') as RepName,
             a.Ldap as con_RepLdap,
             coalesce(upper(a.agent_tsm),'UNKNOWN') as RepTSM,
             coalesce(upper(a.agent_manager),'UNKNOWN') as RepManger,
             a.Team_key as TeamKey,
             'UNKNOWN' as Txns,
             a.Language as Language,
             a.media_type as Channel,
             a.Attributes_surfaceAppId as Surface_app_id,
             a.queue as queue,
             a.Queue_Bif as queue_type,
             'UNKNOWN' as net_purchases_deal_band,
             'UNKNOWN' as net_cancelled_deal_band,
             'UNKNOWN' as net_purchases_deal_band_overall,
             'UNKNOWN' as net_cancelled_deal_band_overall,
             a.transfer_in_Queue as transfer_in_Queue,
             a.transfer_in_Agent as transfer_in_Agent,
             a.transfer_out_Queue as transfer_out_Queue,
             a.transfer_out_Agent as transfer_out_Agent,
             a.Entered as entered,
             0 as offered,
             case when a.media_type = 'VOICE' then a.accepted else a.interactive end as accepeted,
             a.abandoned_waiting as abandoned,
             a.non_interactive as Non_Interactive,
             a.wrap_time/60 as Wrap_time_min,
             a.talk_duration/60 as Talk_time_min,
             a.transfer_in as transfer_in,
             a.transfer_out as transfer_out,
             0 as Incremental_arr,
             0 as Incremental_arr_customer_addon,
             0 as addl_purchase_diff,
             0 as addl_purchase_same,
             0 as gross_cancel_arr_cfx,
             0 as gross_new_arr_cfx,
             0 as gross_new_subs,
             0 as init_purchase_arr_cfx,
             0 as migrated_from_arr_cfx,
             0 as migrated_to_arr_cfx,
             0 as net_cancelled_arr_cfx,
             0 as net_new_arr_cfx,
             0 as net_new_subs,
             0 as net_purchases_arr_cfx,
             0 as net_purchases_arr_gt_5K,
             0 as net_purchases_arr_ls_5K,
             0 as orders_gt_5K,
             0 as orders_ls_5K,
             0 as reactivated_arr_cfx,
             0 as returns_arr_cfx,
             0 as renewal_from_arr_cfx,
             0 as renewal_to_arr_cfx,
             0 as net_purchases_arr_cfx_unclaimed,
             0 as gross_new_arr_cfx_unclaimed,
             0 as net_migration_arr_cfx,
             a.fiscal_yr_and_qtr_desc as fiscal_yr_and_qtr_desc,
             a.fiscal_yr_and_wk_desc as fiscal_yr_and_wk_desc
             from (select * from {OAC_CALL_CHAT_TBL} where fiscal_yr_and_wk_desc >='2023-37' and ((media_type='VOICE' and interaction_type='INBOUND') OR (media_type='CHAT'))) a                              
             """.format(OAC_CALL_CHAT_TBL=OAC_CALL_CHAT_TBL))
             df_ib_voice_chat.createOrReplaceTempView('df_ib_voice_chat')


             df_incremental_arr = spark.sql("""
             select 
             incremental_arr.Geo as geo,
             'UNKNOWN' as MARKET_AREA,
             'UNKNOWN' as market_area_description,
             'UNKNOWN' as MARKET_SEGMENT,
             incremental_arr.PHONE_VS_WEB as cc_phone_vs_web,
             'UNKNOWN' as cc_segment,
             upper(incremental_arr.Product_Mapping) as product_group,
             'UNKNOWN' as sub_product_group,
             'UNKNOWN' as STYPE,
             'UNKNOWN' as projected_dme_gtm_segment,
             'UNKNOWN' as product_name_description,
             'UNKNOWN' as gtm_acct_segment,
             'UNKNOWN' as route_to_market,
             'UNKNOWN' as PROMOTION,
             'UNKNOWN' as PROMO_TYPE,
             'UNKNOWN' as SALES_DISTRICT,
             incremental_arr.Sales_centre as Sales_Center,
             'UNKNOWN' as RepName,
             'UNKNOWN' as con_RepLdap,
             'UNKNOWN' as RepTSM,
             incremental_arr.Manager as RepManger,
             incremental_arr.Team_key as TeamKey,
             incremental_arr.Txn as Txns,
             'UNKNOWN' as Language,
             'UNKNOWN' as Channel,
             'UNKNOWN' as Surface_app_id,
             'UNKNOWN' as queue,
             'UNKNOWN' as queue_type,
             'UNKNOWN' as net_purchases_deal_band,
             'UNKNOWN' as net_cancelled_deal_band,
             'UNKNOWN' as net_purchases_deal_band_overall,
             'UNKNOWN' as net_cancelled_deal_band_overall,
             'UNKNOWN' as transfer_in_Queue,
             'UNKNOWN' as transfer_in_Agent,
             'UNKNOWN' as transfer_out_Queue,
             'UNKNOWN' as transfer_out_Agent,
             0 as entered,
             0 as offered,
             0 as accepeted,
             0 as abandoned,
             0 as Non_Interactive,
             0 as Wrap_time_min,
             0 as Talk_time_min,
             0 as transfer_in,
             0 as transfer_out,
             incremental_arr.Incremental_arr as Incremental_arr,
             incremental_arr.Incremental_arr_customer_addon as Incremental_arr_customer_addon,
             0 as addl_purchase_diff,
             0 as addl_purchase_same,
             0 as gross_cancel_arr_cfx,
             0 as gross_new_arr_cfx,
             0 as gross_new_subs,
             0 as init_purchase_arr_cfx,
             0 as migrated_from_arr_cfx,
             0 as migrated_to_arr_cfx,
             0 as net_cancelled_arr_cfx,
             0 as net_new_arr_cfx,
             0 as net_new_subs,
             0 as net_purchases_arr_cfx,
             0 as net_purchases_arr_gt_5K,
             0 as net_purchases_arr_ls_5K,
             0 as orders_gt_5K,
             0 as orders_ls_5K,
             0 as reactivated_arr_cfx,
             0 as returns_arr_cfx,
             0 as renewal_from_arr_cfx,
             0 as renewal_to_arr_cfx,
             0 as net_purchases_arr_cfx_unclaimed,
             0 as gross_new_arr_cfx_unclaimed,
             0 as net_migration_arr_cfx,
             incremental_arr.Quarter as fiscal_yr_and_qtr_desc,
             incremental_arr.Fiscal_WK as fiscal_yr_and_wk_desc
             from {QRF_TBL} incremental_arr                         
             """.format(QRF_TBL = QRF_TBL))
             df_incremental_arr.createOrReplaceTempView('df_incremental_arr')

             df_final = spark.sql(""" 
             select * from df_base
             union all
             select * from df_historic
             union all
             select * from df_ib_voice_chat_from_file
             union all
             select * from df_ib_voice_chat
             union all
             select * from df_incremental_arr
             """.format(CURRENT_QTR = CURRENT_QTR ))
             df_final.createOrReplaceTempView('df_final')
             

#---------Creating dataframe/temp view for table table "rtb_lookup_table"---------#
 
             df_rtb_lookup = spark.sql("""select max_qtr_date , fiscal_wk_ending_date , fiscal_yr_and_wk_desc as fiscal_yr_and_wk_desc_rtb , fiscal_yr_and_wk_desc_actual ,
             fiscal_yr_and_wk_desc_derived , week_no , wkname , fiscal_yr_and_wk_desc_lwk , fiscal_yr_and_wk_in_lqtr , fiscal_yr_and_wk_ly ,
             fiscal_yr_and_wk_in_lylq , fiscal_wk_in_qtr , fiscal_yr_and_qtr_flag , fiscal_yr_and_qtr , fiscal_yr_and_qtr_desc as fiscal_yr_and_qtr_desc_rtb, quarter_no ,
             fiscal_yr_and_qtr_desc_lqtr , fiscal_yr_and_qtr_ly , fiscal_yr_and_qtr_lylq , fiscal_prv_wk_flag , fiscal_yr_and_wk_flag ,
             week_select_flag, fiscal_yr_and_wk , day_name , baked_weeks from {STG1_TBL}""".format(STG1_TBL=STG1_TBL))
             df_rtb_lookup.createOrReplaceTempView("df_rtb_lookup")

             query = "Select distinct fiscal_yr_and_wk_desc_actual from df_rtb_lookup"
             result_df = spark.sql(query)
             values_list = [row.fiscal_yr_and_wk_desc_actual for row in result_df.collect()]
             weeks_actuals = ",".join(f"'{value}'" for value in values_list)

             df_data_cq = spark.sql("""
             select
             base.geo,
             base.market_area,
             base.market_area_description,
             base.market_segment,
             base.cc_phone_vs_web,
             base.cc_segment,
             base.product_group,
             base.sub_product_group,
             base.STYPE,
             base.projected_dme_gtm_segment,
             base.gtm_acct_segment,
             base.route_to_market,
             base.promotion,
             base.promo_type,
             base.sales_district,
             base.sales_center,
             base.repname,
             base.con_RepLdap as RepLdap,
             base.reptsm,
             base.repmanger,
             base.standard_team_name as repteam,
             base.Team_category,
             base.txns as transaction_type,
             base.net_purchases_deal_band,
             base.net_cancelled_deal_band,
             base.net_purchases_deal_band_overall,
             base.net_cancelled_deal_band_overall,
             base.Language,
             base.Channel,
             base.Surface_app_id,
             base.queue,
             base.queue_type,
             base.transfer_in_Queue,
             base.transfer_in_Agent,
             base.transfer_out_Queue,
             base.transfer_out_Agent,
             base.entered_actuals,
             base.entered_lq,
             base.entered_ly,
             base.entered_lylq,
             base.entered_lwk,
             base.offered_actuals,
             base.offered_lq,
             base.offered_ly,
             base.offered_lylq,
             base.offered_lwk,
             base.accepeted_actuals,
             base.accepeted_lq,
             base.accepeted_ly,
             base.accepeted_lylq,
             base.accepeted_lwk,
             base.abandoned_actuals,
             base.abandoned_lq,
             base.abandoned_ly,
             base.abandoned_lylq,
             base.abandoned_lwk,
             base.Non_Interactive_actuals,
             base.Non_Interactive_lq,
             base.Non_Interactive_ly,
             base.Non_Interactive_lylq,
             base.Non_Interactive_lwk,
             base.Wrap_time_min_actuals,
             base.Wrap_time_min_lq,
             base.Wrap_time_min_ly,
             base.Wrap_time_min_lylq,
             base.Wrap_time_min_lwk,
             base.Talk_time_min_actuals,
             base.Talk_time_min_lq,
             base.Talk_time_min_ly,
             base.Talk_time_min_lylq,
             base.Talk_time_min_lwk,
             base.transfer_in_actuals,
             base.transfer_in_lq,
             base.transfer_in_ly,
             base.transfer_in_lylq,
             base.transfer_in_lwk,
             base.transfer_out_actuals,
             base.transfer_out_lq,
             base.transfer_out_ly,
             base.transfer_out_lylq,
             base.transfer_out_lwk,
             base.incremental_arr_actuals,
             base.incremental_arr_lq,
             base.incremental_arr_ly,
             base.incremental_arr_lylq,
             base.incremental_arr_lwk,
             base.Incremental_arr_customer_addon_actuals,
             base.Incremental_arr_customer_addon_lq,
             base.Incremental_arr_customer_addon_ly,
             base.Incremental_arr_customer_addon_lylq,
             base.Incremental_arr_customer_addon_lwk,
             base.addl_purchase_diff_actuals,
             base.addl_purchase_diff_lq,
             base.addl_purchase_diff_ly,
             base.addl_purchase_diff_lylq,
             base.addl_purchase_diff_lwk,
             base.addl_purchase_same_actuals,
             base.addl_purchase_same_lq,
             base.addl_purchase_same_ly,
             base.addl_purchase_same_lylq,
             base.addl_purchase_same_lwk,
             base.gross_cancel_arr_cfx_actuals,
             base.gross_cancel_arr_cfx_lq,
             base.gross_cancel_arr_cfx_ly,
             base.gross_cancel_arr_cfx_lylq,
             base.gross_cancel_arr_cfx_lwk,
             base.gross_new_arr_cfx_actuals,
             base.gross_new_arr_cfx_lq,
             base.gross_new_arr_cfx_ly,
             base.gross_new_arr_cfx_lylq,
             base.gross_new_arr_cfx_lwk,
             base.gross_new_subs_actuals,
             base.gross_new_subs_lq,
             base.gross_new_subs_ly,
             base.gross_new_subs_lylq,
             base.gross_new_subs_lwk,
             base.init_purchase_arr_cfx_actuals,
             base.init_purchase_arr_cfx_lq,
             base.init_purchase_arr_cfx_ly,
             base.init_purchase_arr_cfx_lylq,
             base.init_purchase_arr_cfx_lwk,
             base.migrated_from_arr_cfx_actuals,
             base.migrated_from_arr_cfx_lq,
             base.migrated_from_arr_cfx_ly,
             base.migrated_from_arr_cfx_lylq,
             base.migrated_from_arr_cfx_lwk,
             base.migrated_to_arr_cfx_actuals,
             base.migrated_to_arr_cfx_lq,
             base.migrated_to_arr_cfx_ly,
             base.migrated_to_arr_cfx_lylq,
             base.migrated_to_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_actuals,
             base.net_cancelled_arr_cfx_lq,
             base.net_cancelled_arr_cfx_ly,
             base.net_cancelled_arr_cfx_lylq,
             base.net_cancelled_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_qrf,
             base.net_new_arr_cfx_actuals,
             base.net_new_arr_cfx_lq,
             base.net_new_arr_cfx_ly,
             base.net_new_arr_cfx_lylq,
             base.net_new_arr_cfx_lwk,
             base.net_new_subs_actuals,
             base.net_new_subs_lq,
             base.net_new_subs_ly,
             base.net_new_subs_lylq,
             base.net_new_subs_lwk,
             base.net_purchases_arr_cfx_actuals,
             base.net_purchases_arr_cfx_lq,
             base.net_purchases_arr_cfx_ly,
             base.net_purchases_arr_cfx_lylq,
             base.net_purchases_arr_cfx_lwk,
             base.net_purchases_arr_qrf,
             base.net_purchases_arr_buffer_qrf,
             base.net_purchases_arr_gt_5K_actuals,
             base.net_purchases_arr_gt_5K_lq,
             base.net_purchases_arr_gt_5K_ly,
             base.net_purchases_arr_gt_5K_lylq,
             base.net_purchases_arr_gt_5K_lwk,
             base.net_purchases_arr_ls_5K_actuals,
             base.net_purchases_arr_ls_5K_lq,
             base.net_purchases_arr_ls_5K_ly,
             base.net_purchases_arr_ls_5K_lylq,
             base.net_purchases_arr_ls_5K_lwk,
             base.orders_gt_5K_actuals,
             base.orders_gt_5K_lq,
             base.orders_gt_5K_ly,
             base.orders_gt_5K_lylq,
             base.orders_gt_5K_lwk,
             base.orders_ls_5K_actuals,
             base.orders_ls_5K_lq,
             base.orders_ls_5K_ly,
             base.orders_ls_5K_lylq,
             base.orders_ls_5K_lwk,
             base.reactivated_arr_cfx_actuals,
             base.reactivated_arr_cfx_lq,
             base.reactivated_arr_cfx_ly,
             base.reactivated_arr_cfx_lylq,
             base.reactivated_arr_cfx_lwk,
             base.returns_arr_cfx_actuals,
             base.returns_arr_cfx_lq,
             base.returns_arr_cfx_ly,
             base.returns_arr_cfx_lylq,
             base.returns_arr_cfx_lwk,
             base.renewal_from_arr_cfx_actuals,
             base.renewal_from_arr_cfx_lq,
             base.renewal_from_arr_cfx_ly,
             base.renewal_from_arr_cfx_lylq,
             base.renewal_from_arr_cfx_lwk,
             base.renewal_to_arr_cfx_actuals,
             base.renewal_to_arr_cfx_lq,
             base.renewal_to_arr_cfx_ly,
             base.renewal_to_arr_cfx_lylq,
             base.renewal_to_arr_cfx_lwk,
             base.net_purchases_arr_cfx_unclaimed_actuals,
             base.net_purchases_arr_cfx_unclaimed_lq,
             base.net_purchases_arr_cfx_unclaimed_ly,
             base.net_purchases_arr_cfx_unclaimed_lylq,
             base.net_purchases_arr_cfx_unclaimed_lwk,
             base.gross_new_arr_cfx_unclaimed_actuals,
             base.gross_new_arr_cfx_unclaimed_lq,
             base.gross_new_arr_cfx_unclaimed_ly,
             base.gross_new_arr_cfx_unclaimed_lylq,
             base.gross_new_arr_cfx_unclaimed_lwk,
             base.net_migration_arr_cfx_actuals,
             base.net_migration_arr_cfx_ly,
             base.net_migration_arr_cfx_lq,
             base.net_migration_arr_cfx_lylq,
             base.net_migration_arr_cfx_lwk,
             base.net_migration_arr_qrf,

             rtb.fiscal_yr_and_wk_desc_actual as fiscal_yr_and_wk_desc,
             rtb.fiscal_yr_and_qtr_desc_rtb as fiscal_yr_and_qtr_desc
             from
             (          
             select
             GEO as geo,
             MARKET_AREA as market_area,
             market_area_description as market_area_description,
             MARKET_SEGMENT as market_segment,
             cc_phone_vs_web as cc_phone_vs_web,
             cc_segment as cc_segment,
             product_group as product_group,
             sub_product_group as  sub_product_group,
             STYPE as STYPE,
             projected_dme_gtm_segment as projected_dme_gtm_segment,
             gtm_acct_segment as gtm_acct_segment,
             route_to_market as route_to_market,
             PROMOTION as promotion,
             PROMO_TYPE as promo_type,
             SALES_DISTRICT as sales_district,
             Sales_Center as sales_center,
             RepName as repname,
             con_RepLdap as con_RepLdap,
             RepTSM as reptsm,
             RepManger as repmanger,
             standard_team_name as standard_team_name,
             Team_category as Team_category,
             Txns as txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language as Language,
             Channel as Channel,
             Surface_app_id as Surface_app_id,
             queue as queue,
             queue_type as queue_type,
             transfer_in_Queue as transfer_in_Queue,
             transfer_in_Agent as transfer_in_Agent,
             transfer_out_Queue as transfer_out_Queue,
             transfer_out_Agent as transfer_out_Agent,

             sum(entered) as entered_actuals,
             0 as entered_lq,
             0 as entered_ly,
             0 as entered_lylq,
             0 as entered_lwk,

             sum(offered) as offered_actuals,
             0 as offered_lq,
             0 as offered_ly,
             0 as offered_lylq,
             0 as offered_lwk,

             sum(accepeted) as accepeted_actuals,
             0 as accepeted_lq,
             0 as accepeted_ly,
             0 as accepeted_lylq,
             0 as accepeted_lwk,

             sum(abandoned) as abandoned_actuals,
             0 as abandoned_lq,
             0 as abandoned_ly,
             0 as abandoned_lylq,
             0 as abandoned_lwk,

             sum(Non_Interactive) as Non_Interactive_actuals,
             0 as Non_Interactive_lq,
             0 as Non_Interactive_ly,
             0 as Non_Interactive_lylq,
             0 as Non_Interactive_lwk,

             sum(Wrap_time_min) as Wrap_time_min_actuals,
             0 as Wrap_time_min_lq,
             0 as Wrap_time_min_ly,
             0 as Wrap_time_min_lylq,
             0 as Wrap_time_min_lwk,

             sum(Talk_time_min) as Talk_time_min_actuals,
             0 as Talk_time_min_lq,
             0 as Talk_time_min_ly,
             0 as Talk_time_min_lylq,
             0 as Talk_time_min_lwk,

             sum(transfer_in) as transfer_in_actuals,
             0 as transfer_in_lq,
             0 as transfer_in_ly,
             0 as transfer_in_lylq,
             0 as transfer_in_lwk,

             sum(transfer_out) as transfer_out_actuals,
             0 as transfer_out_lq,
             0 as transfer_out_ly,
             0 as transfer_out_lylq,
             0 as transfer_out_lwk,

             sum(incremental_arr) as incremental_arr_actuals,
             0 as incremental_arr_lq,
             0 as incremental_arr_ly,
             0 as incremental_arr_lylq,
             0 as incremental_arr_lwk,

             sum(Incremental_arr_customer_addon) as Incremental_arr_customer_addon_actuals,
             0 as Incremental_arr_customer_addon_lq,
             0 as Incremental_arr_customer_addon_ly,
             0 as Incremental_arr_customer_addon_lylq,
             0 as Incremental_arr_customer_addon_lwk,

             sum(addl_purchase_diff) as addl_purchase_diff_actuals,
             0 as addl_purchase_diff_lq,
             0 as addl_purchase_diff_ly,
             0 as addl_purchase_diff_lylq,
             0 as addl_purchase_diff_lwk,

             sum(addl_purchase_same) as addl_purchase_same_actuals,
             0 as addl_purchase_same_lq,
             0 as addl_purchase_same_ly,
             0 as addl_purchase_same_lylq,
             0 as addl_purchase_same_lwk,

             sum(gross_cancel_arr_cfx) as gross_cancel_arr_cfx_actuals,
             0 as gross_cancel_arr_cfx_lq,
             0 as gross_cancel_arr_cfx_ly,
             0 as gross_cancel_arr_cfx_lylq,
             0 as gross_cancel_arr_cfx_lwk,

             sum(gross_new_arr_cfx) as gross_new_arr_cfx_actuals,
             0 as gross_new_arr_cfx_lq,
             0 as gross_new_arr_cfx_ly,
             0 as gross_new_arr_cfx_lylq,
             0 as gross_new_arr_cfx_lwk,

             sum(gross_new_subs) as gross_new_subs_actuals,
             0 as gross_new_subs_lq,
             0 as gross_new_subs_ly,
             0 as gross_new_subs_lylq,
             0 as gross_new_subs_lwk,

             sum(init_purchase_arr_cfx) as init_purchase_arr_cfx_actuals,
             0 as init_purchase_arr_cfx_lq,
             0 as init_purchase_arr_cfx_ly,
             0 as init_purchase_arr_cfx_lylq,
             0 as init_purchase_arr_cfx_lwk,

             sum(migrated_from_arr_cfx) as migrated_from_arr_cfx_actuals,
             0 as migrated_from_arr_cfx_lq,
             0 as migrated_from_arr_cfx_ly,
             0 as migrated_from_arr_cfx_lylq,
             0 as migrated_from_arr_cfx_lwk,

             sum(migrated_to_arr_cfx) as migrated_to_arr_cfx_actuals,
             0 as migrated_to_arr_cfx_lq,
             0 as migrated_to_arr_cfx_ly,
             0 as migrated_to_arr_cfx_lylq,
             0 as migrated_to_arr_cfx_lwk,

             sum(net_cancelled_arr_cfx) as net_cancelled_arr_cfx_actuals,
             0 as net_cancelled_arr_cfx_lq,
             0 as net_cancelled_arr_cfx_ly,
             0 as net_cancelled_arr_cfx_lylq,
             0 as net_cancelled_arr_cfx_lwk,
             0 as net_cancelled_arr_cfx_qrf,

             sum(net_new_arr_cfx) as net_new_arr_cfx_actuals,
             0 as net_new_arr_cfx_lq,
             0 as net_new_arr_cfx_ly,
             0 as net_new_arr_cfx_lylq,
             0 as net_new_arr_cfx_lwk,

             sum(net_new_subs) as net_new_subs_actuals,
             0 as net_new_subs_lq,
             0 as net_new_subs_ly,
             0 as net_new_subs_lylq,
             0 as net_new_subs_lwk,

             sum(net_purchases_arr_cfx) as net_purchases_arr_cfx_actuals,
             0 as net_purchases_arr_cfx_lq,
             0 as net_purchases_arr_cfx_ly,
             0 as net_purchases_arr_cfx_lylq,
             0 as net_purchases_arr_cfx_lwk,
             0 as net_purchases_arr_qrf,
             0 as net_purchases_arr_buffer_qrf,

             sum(net_purchases_arr_gt_5K) as net_purchases_arr_gt_5K_actuals,
             0 as net_purchases_arr_gt_5K_lq,
             0 as net_purchases_arr_gt_5K_ly,
             0 as net_purchases_arr_gt_5K_lylq,
             0 as net_purchases_arr_gt_5K_lwk,

             sum(net_purchases_arr_ls_5K) as net_purchases_arr_ls_5K_actuals,
             0 as net_purchases_arr_ls_5K_lq,
             0 as net_purchases_arr_ls_5K_ly,
             0 as net_purchases_arr_ls_5K_lylq,
             0 as net_purchases_arr_ls_5K_lwk,

             sum(orders_gt_5K) as orders_gt_5K_actuals,
             0 as orders_gt_5K_lq,
             0 as orders_gt_5K_ly,
             0 as orders_gt_5K_lylq,
             0 as orders_gt_5K_lwk,

             sum(orders_ls_5K) as orders_ls_5K_actuals,
             0 as orders_ls_5K_lq,
             0 as orders_ls_5K_ly,
             0 as orders_ls_5K_lylq,
             0 as orders_ls_5K_lwk,


             sum(reactivated_arr_cfx) as reactivated_arr_cfx_actuals,
             0 as reactivated_arr_cfx_lq,
             0 as reactivated_arr_cfx_ly,
             0 as reactivated_arr_cfx_lylq,
             0 as reactivated_arr_cfx_lwk,

             sum(returns_arr_cfx) as returns_arr_cfx_actuals,
             0 as returns_arr_cfx_lq,
             0 as returns_arr_cfx_ly,
             0 as returns_arr_cfx_lylq,
             0 as returns_arr_cfx_lwk,

             sum(renewal_from_arr_cfx) as renewal_from_arr_cfx_actuals,
             0 as renewal_from_arr_cfx_lq,
             0 as renewal_from_arr_cfx_ly,
             0 as renewal_from_arr_cfx_lylq,
             0 as renewal_from_arr_cfx_lwk,

             sum(renewal_to_arr_cfx) as renewal_to_arr_cfx_actuals,
             0 as renewal_to_arr_cfx_lq,
             0 as renewal_to_arr_cfx_ly,
             0 as renewal_to_arr_cfx_lylq,
             0 as renewal_to_arr_cfx_lwk,

             sum(net_purchases_arr_cfx_unclaimed) as net_purchases_arr_cfx_unclaimed_actuals,
             0 as net_purchases_arr_cfx_unclaimed_lq,
             0 as net_purchases_arr_cfx_unclaimed_ly,
             0 as net_purchases_arr_cfx_unclaimed_lylq,
             0 as net_purchases_arr_cfx_unclaimed_lwk,

             sum(gross_new_arr_cfx_unclaimed) as gross_new_arr_cfx_unclaimed_actuals,
             0 as gross_new_arr_cfx_unclaimed_lq,
             0 as gross_new_arr_cfx_unclaimed_ly,
             0 as gross_new_arr_cfx_unclaimed_lylq,
             0 as gross_new_arr_cfx_unclaimed_lwk,

             sum(net_migration_arr_cfx) as net_migration_arr_cfx_actuals,
             0 as net_migration_arr_cfx_ly,
             0 as net_migration_arr_cfx_lq,
             0 as net_migration_arr_cfx_lylq,
             0 as net_migration_arr_cfx_lwk,
             0 as net_migration_arr_qrf,

             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc

             from (
             select a.*,b.standard_team_name,b.Team_category from 
             (select * from df_final where FISCAL_YR_AND_WK_DESC in ({weeks_actuals})) a
             left outer join (select DISTINCT team_key,standard_team_name,Team_category from {STG3_TBL}) b
             on a.TeamKey = b.Team_key
             ) basetbl
             group by 
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc,
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             PROMO_TYPE,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             standard_team_name,
             Team_category,
             Txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language,
             Channel,
             Surface_app_id,
             queue,
             queue_type,
             transfer_in_Queue,
             transfer_in_Agent,
             transfer_out_Queue,
             transfer_out_Agent 
             ) base
             left outer join
             df_rtb_lookup rtb
             on base.fiscal_yr_and_wk_desc = rtb.fiscal_yr_and_wk_desc_actual
             """.format(STG3_TBL=STG3_TBL,weeks_actuals=weeks_actuals))
             df_data_cq.createOrReplaceTempView("df_data_cq")

             query = "Select distinct fiscal_yr_and_wk_in_lqtr from df_rtb_lookup"
             result_df = spark.sql(query)
             values_list = [row.fiscal_yr_and_wk_in_lqtr for row in result_df.collect()]
             weeks_lq = ",".join(f"'{value}'" for value in values_list)

             df_data_lq = spark.sql("""
             select
             base.geo,
             base.market_area,
             base.market_area_description,
             base.market_segment,
             base.cc_phone_vs_web,
             base.cc_segment,
             base.product_group,
             base.sub_product_group,
             base.STYPE,
             base.projected_dme_gtm_segment,
             base.gtm_acct_segment,
             base.route_to_market,
             base.promotion,
             base.promo_type,
             base.sales_district,
             base.sales_center,
             base.repname,
             base.con_RepLdap as RepLdap,
             base.reptsm,
             base.repmanger,
             base.standard_team_name as repteam,
             base.Team_category as Team_category,
             base.txns as transaction_type,
             base.net_purchases_deal_band,
             base.net_cancelled_deal_band,
             base.net_purchases_deal_band_overall,
             base.net_cancelled_deal_band_overall,
             base.Language,
             base.Channel,
             base.Surface_app_id,
             base.queue,
             base.queue_type,
             base.transfer_in_Queue,
             base.transfer_in_Agent,
             base.transfer_out_Queue,
             base.transfer_out_Agent,
             base.entered_actuals,
             base.entered_lq,
             base.entered_ly,
             base.entered_lylq,
             base.entered_lwk,
             base.offered_actuals,
             base.offered_lq,
             base.offered_ly,
             base.offered_lylq,
             base.offered_lwk,
             base.accepeted_actuals,
             base.accepeted_lq,
             base.accepeted_ly,
             base.accepeted_lylq,
             base.accepeted_lwk,
             base.abandoned_actuals,
             base.abandoned_lq,
             base.abandoned_ly,
             base.abandoned_lylq,
             base.abandoned_lwk,
             base.Non_Interactive_actuals,
             base.Non_Interactive_lq,
             base.Non_Interactive_ly,
             base.Non_Interactive_lylq,
             base.Non_Interactive_lwk,
             base.Wrap_time_min_actuals,
             base.Wrap_time_min_lq,
             base.Wrap_time_min_ly,
             base.Wrap_time_min_lylq,
             base.Wrap_time_min_lwk,
             base.Talk_time_min_actuals,
             base.Talk_time_min_lq,
             base.Talk_time_min_ly,
             base.Talk_time_min_lylq,
             base.Talk_time_min_lwk,
             base.transfer_in_actuals,
             base.transfer_in_lq,
             base.transfer_in_ly,
             base.transfer_in_lylq,
             base.transfer_in_lwk,
             base.transfer_out_actuals,
             base.transfer_out_lq,
             base.transfer_out_ly,
             base.transfer_out_lylq,
             base.transfer_out_lwk,
             base.incremental_arr_actuals,
             base.incremental_arr_lq,
             base.incremental_arr_ly,
             base.incremental_arr_lylq,
             base.incremental_arr_lwk,
             base.Incremental_arr_customer_addon_actuals,
             base.Incremental_arr_customer_addon_lq,
             base.Incremental_arr_customer_addon_ly,
             base.Incremental_arr_customer_addon_lylq,
             base.Incremental_arr_customer_addon_lwk,
             base.addl_purchase_diff_actuals,
             base.addl_purchase_diff_lq,
             base.addl_purchase_diff_ly,
             base.addl_purchase_diff_lylq,
             base.addl_purchase_diff_lwk,
             base.addl_purchase_same_actuals,
             base.addl_purchase_same_lq,
             base.addl_purchase_same_ly,
             base.addl_purchase_same_lylq,
             base.addl_purchase_same_lwk,
             base.gross_cancel_arr_cfx_actuals,
             base.gross_cancel_arr_cfx_lq,
             base.gross_cancel_arr_cfx_ly,
             base.gross_cancel_arr_cfx_lylq,
             base.gross_cancel_arr_cfx_lwk,
             base.gross_new_arr_cfx_actuals,
             base.gross_new_arr_cfx_lq,
             base.gross_new_arr_cfx_ly,
             base.gross_new_arr_cfx_lylq,
             base.gross_new_arr_cfx_lwk,
             base.gross_new_subs_actuals,
             base.gross_new_subs_lq,
             base.gross_new_subs_ly,
             base.gross_new_subs_lylq,
             base.gross_new_subs_lwk,
             base.init_purchase_arr_cfx_actuals,
             base.init_purchase_arr_cfx_lq,
             base.init_purchase_arr_cfx_ly,
             base.init_purchase_arr_cfx_lylq,
             base.init_purchase_arr_cfx_lwk,
             base.migrated_from_arr_cfx_actuals,
             base.migrated_from_arr_cfx_lq,
             base.migrated_from_arr_cfx_ly,
             base.migrated_from_arr_cfx_lylq,
             base.migrated_from_arr_cfx_lwk,
             base.migrated_to_arr_cfx_actuals,
             base.migrated_to_arr_cfx_lq,
             base.migrated_to_arr_cfx_ly,
             base.migrated_to_arr_cfx_lylq,
             base.migrated_to_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_actuals,
             base.net_cancelled_arr_cfx_lq,
             base.net_cancelled_arr_cfx_ly,
             base.net_cancelled_arr_cfx_lylq,
             base.net_cancelled_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_qrf,
             base.net_new_arr_cfx_actuals,
             base.net_new_arr_cfx_lq,
             base.net_new_arr_cfx_ly,
             base.net_new_arr_cfx_lylq,
             base.net_new_arr_cfx_lwk,
             base.net_new_subs_actuals,
             base.net_new_subs_lq,
             base.net_new_subs_ly,
             base.net_new_subs_lylq,
             base.net_new_subs_lwk,
             base.net_purchases_arr_cfx_actuals,
             base.net_purchases_arr_cfx_lq,
             base.net_purchases_arr_cfx_ly,
             base.net_purchases_arr_cfx_lylq,
             base.net_purchases_arr_cfx_lwk,
             base.net_purchases_arr_qrf,
             base.net_purchases_arr_buffer_qrf,
             base.net_purchases_arr_gt_5K_actuals,
             base.net_purchases_arr_gt_5K_lq,
             base.net_purchases_arr_gt_5K_ly,
             base.net_purchases_arr_gt_5K_lylq,
             base.net_purchases_arr_gt_5K_lwk,
             base.net_purchases_arr_ls_5K_actuals,
             base.net_purchases_arr_ls_5K_lq,
             base.net_purchases_arr_ls_5K_ly,
             base.net_purchases_arr_ls_5K_lylq,
             base.net_purchases_arr_ls_5K_lwk, 
             base.orders_gt_5K_actuals,
             base.orders_gt_5K_lq,
             base.orders_gt_5K_ly,
             base.orders_gt_5K_lylq,
             base.orders_gt_5K_lwk,
             base.orders_ls_5K_actuals,
             base.orders_ls_5K_lq,
             base.orders_ls_5K_ly,
             base.orders_ls_5K_lylq,
             base.orders_ls_5K_lwk, 
             base.reactivated_arr_cfx_actuals,
             base.reactivated_arr_cfx_lq,
             base.reactivated_arr_cfx_ly,
             base.reactivated_arr_cfx_lylq,
             base.reactivated_arr_cfx_lwk,
             base.returns_arr_cfx_actuals,
             base.returns_arr_cfx_lq,
             base.returns_arr_cfx_ly,
             base.returns_arr_cfx_lylq,
             base.returns_arr_cfx_lwk,
             base.renewal_from_arr_cfx_actuals,
             base.renewal_from_arr_cfx_lq,
             base.renewal_from_arr_cfx_ly,
             base.renewal_from_arr_cfx_lylq,
             base.renewal_from_arr_cfx_lwk,
             base.renewal_to_arr_cfx_actuals,
             base.renewal_to_arr_cfx_lq,
             base.renewal_to_arr_cfx_ly,
             base.renewal_to_arr_cfx_lylq,
             base.renewal_to_arr_cfx_lwk,
             base.net_purchases_arr_cfx_unclaimed_actuals,
             base.net_purchases_arr_cfx_unclaimed_lq,
             base.net_purchases_arr_cfx_unclaimed_ly,
             base.net_purchases_arr_cfx_unclaimed_lylq,
             base.net_purchases_arr_cfx_unclaimed_lwk,
             base.gross_new_arr_cfx_unclaimed_actuals,
             base.gross_new_arr_cfx_unclaimed_lq,
             base.gross_new_arr_cfx_unclaimed_ly,
             base.gross_new_arr_cfx_unclaimed_lylq,
             base.gross_new_arr_cfx_unclaimed_lwk,
             base.net_migration_arr_cfx_actuals,
             base.net_migration_arr_cfx_ly,
             base.net_migration_arr_cfx_lq,
             base.net_migration_arr_cfx_lylq,
             base.net_migration_arr_cfx_lwk,
             base.net_migration_arr_qrf,

             rtb.fiscal_yr_and_wk_desc_actual as fiscal_yr_and_wk_desc,
             rtb.fiscal_yr_and_qtr_desc_rtb as fiscal_yr_and_qtr_desc
             from
             (           
             select
             GEO as geo,
             MARKET_AREA as market_area,
             market_area_description as market_area_description,
             MARKET_SEGMENT as market_segment,
             cc_phone_vs_web as cc_phone_vs_web,
             cc_segment as cc_segment,
             product_group as product_group,
             sub_product_group as  sub_product_group,
             STYPE as STYPE,
             projected_dme_gtm_segment as projected_dme_gtm_segment,
             gtm_acct_segment as gtm_acct_segment,
             route_to_market as route_to_market,
             PROMOTION as promotion,
             PROMO_TYPE as promo_type,
             SALES_DISTRICT as sales_district,
             Sales_Center as sales_center,
             RepName as repname,
             con_RepLdap as con_RepLdap,
             RepTSM as reptsm,
             RepManger as repmanger,
             standard_team_name as standard_team_name,
             Team_category as Team_category,
             Txns as txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language as Language,
             Channel as Channel,
             Surface_app_id as Surface_app_id,
             queue as queue,
             queue_type as queue_type,
             transfer_in_Queue as transfer_in_Queue,
             transfer_in_Agent as transfer_in_Agent,
             transfer_out_Queue as transfer_out_Queue,
             transfer_out_Agent as transfer_out_Agent,

             0 as entered_actuals,
             sum(entered) as entered_lq,
             0 as entered_ly,
             0 as entered_lylq,
             0 as entered_lwk,

             0 as offered_actuals,
             sum(offered) as offered_lq,
             0 as offered_ly,
             0 as offered_lylq,
             0 as offered_lwk,

             0 as accepeted_actuals,
             sum(accepeted) as accepeted_lq,
             0 as accepeted_ly,
             0 as accepeted_lylq,
             0 as accepeted_lwk,

             0 as abandoned_actuals,
             sum(abandoned) as abandoned_lq,
             0 as abandoned_ly,
             0 as abandoned_lylq,
             0 as abandoned_lwk,

             0 as Non_Interactive_actuals,
             sum(Non_Interactive) as Non_Interactive_lq,
             0 as Non_Interactive_ly,
             0 as Non_Interactive_lylq,
             0 as Non_Interactive_lwk,

             0 as Wrap_time_min_actuals,
             sum(Wrap_time_min) as Wrap_time_min_lq,
             0 as Wrap_time_min_ly,
             0 as Wrap_time_min_lylq,
             0 as Wrap_time_min_lwk,

             0 as Talk_time_min_actuals,
             sum(Talk_time_min) as Talk_Time_min_lq,
             0 as Talk_time_min_ly,
             0 as Talk_time_min_lylq,
             0 as Talk_time_min_lwk,

             0 as transfer_in_actuals,
             sum(transfer_in) as transfer_in_lq,
             0 as transfer_in_ly,
             0 as transfer_in_lylq,
             0 as transfer_in_lwk,

             0 as transfer_out_actuals,
             sum(transfer_out) as transfer_out_lq,
             0 as transfer_out_ly,
             0 as transfer_out_lylq,
             0 as transfer_out_lwk,

             0 as incremental_arr_actuals,
             sum(incremental_arr) as incremental_arr_lq,
             0 as incremental_arr_ly,
             0 as incremental_arr_lylq,
             0 as incremental_arr_lwk,

             0 as Incremental_arr_customer_addon_actuals,
             sum(Incremental_arr_customer_addon)  as Incremental_arr_customer_addon_lq,
             0 as Incremental_arr_customer_addon_ly,
             0 as Incremental_arr_customer_addon_lylq,
             0 as Incremental_arr_customer_addon_lwk,

             0 as  addl_purchase_diff_actuals,
             sum(addl_purchase_diff) as addl_purchase_diff_lq,
             0 as addl_purchase_diff_ly,
             0 as addl_purchase_diff_lylq,
             0 as addl_purchase_diff_lwk,

             0 as addl_purchase_same_actuals,
             sum(addl_purchase_same) as addl_purchase_same_lq,
             0 as addl_purchase_same_ly,
             0 as addl_purchase_same_lylq,
             0 as addl_purchase_same_lwk,

             0 as gross_cancel_arr_cfx_actuals,
             sum(gross_cancel_arr_cfx) as gross_cancel_arr_cfx_lq,
             0 as gross_cancel_arr_cfx_ly,
             0 as gross_cancel_arr_cfx_lylq,
             0 as gross_cancel_arr_cfx_lwk,

             0 as gross_new_arr_cfx_actuals,
             sum(gross_new_arr_cfx) as gross_new_arr_cfx_lq,
             0 as gross_new_arr_cfx_ly,
             0 as gross_new_arr_cfx_lylq,
             0 as gross_new_arr_cfx_lwk, 

             0 as gross_new_subs_actuals,
             sum(gross_new_subs) as gross_new_subs_lq,
             0 as gross_new_subs_ly,
             0 as gross_new_subs_lylq,
             0 as gross_new_subs_lwk, 

             0 as init_purchase_arr_cfx_actuals,
             sum(init_purchase_arr_cfx) as init_purchase_arr_cfx_lq,
             0 as init_purchase_arr_cfx_ly,
             0 as init_purchase_arr_cfx_lylq,
             0 as init_purchase_arr_cfx_lwk,

             0 as migrated_from_arr_cfx_actuals,
             sum(migrated_from_arr_cfx) as migrated_from_arr_cfx_lq,
             0 as migrated_from_arr_cfx_ly,
             0 as migrated_from_arr_cfx_lylq,
             0 as migrated_from_arr_cfx_lwk,

             0 as migrated_to_arr_cfx_actuals,
             sum(migrated_to_arr_cfx) as migrated_to_arr_cfx_lq,
             0 as migrated_to_arr_cfx_ly,
             0 as migrated_to_arr_cfx_lylq,
             0 as migrated_to_arr_cfx_lwk,

             0 as net_cancelled_arr_cfx_actuals,
             sum(net_cancelled_arr_cfx) as net_cancelled_arr_cfx_lq,
             0 as net_cancelled_arr_cfx_ly,
             0 as net_cancelled_arr_cfx_lylq,
             0 as net_cancelled_arr_cfx_lwk,
             0 as net_cancelled_arr_cfx_qrf,

             0 as net_new_arr_cfx_actuals,
             sum(net_new_arr_cfx) as net_new_arr_cfx_lq,
             0 as net_new_arr_cfx_ly,
             0 as net_new_arr_cfx_lylq,
             0 as net_new_arr_cfx_lwk,

             0 as net_new_subs_actuals,
             sum(net_new_subs) as net_new_subs_lq,
             0 as net_new_subs_ly,
             0 as net_new_subs_lylq,
             0 as net_new_subs_lwk,

             0 as net_purchases_arr_cfx_actuals,
             sum(net_purchases_arr_cfx) as net_purchases_arr_cfx_lq,
             0 as net_purchases_arr_cfx_ly,
             0 as net_purchases_arr_cfx_lylq,
             0 as net_purchases_arr_cfx_lwk,
             0 as net_purchases_arr_qrf,
             0 as net_purchases_arr_buffer_qrf,

             0 as net_purchases_arr_gt_5K_actuals,
             sum(net_purchases_arr_gt_5K) as net_purchases_arr_gt_5K_lq,
             0 as net_purchases_arr_gt_5K_ly,
             0 as net_purchases_arr_gt_5K_lylq,
             0 as net_purchases_arr_gt_5K_lwk,

             0 as net_purchases_arr_ls_5K_actuals,
             sum(net_purchases_arr_ls_5K) as net_purchases_arr_ls_5K_lq,
             0 as net_purchases_arr_ls_5K_ly,
             0 as net_purchases_arr_ls_5K_lylq,
             0 as net_purchases_arr_ls_5K_lwk,

             0 as orders_gt_5K_actuals,
             sum(orders_gt_5K) as orders_gt_5K_lq,
             0 as orders_gt_5K_ly,
             0 as orders_gt_5K_lylq,
             0 as orders_gt_5K_lwk,

             0 as orders_ls_5K_actuals,
             sum(orders_ls_5K) as orders_ls_5K_lq,
             0 as orders_ls_5K_ly,
             0 as orders_ls_5K_lylq,
             0 as orders_ls_5K_lwk,

             0 as reactivated_arr_cfx_actuals,
             sum(reactivated_arr_cfx) as reactivated_arr_cfx_lq,
             0 as reactivated_arr_cfx_ly,
             0 as reactivated_arr_cfx_lylq,
             0 as reactivated_arr_cfx_lwk,

             0 as returns_arr_cfx_actuals,
             sum(returns_arr_cfx) as returns_arr_cfx_lq,
             0 as returns_arr_cfx_ly,
             0 as returns_arr_cfx_lylq,
             0 as returns_arr_cfx_lwk,

             0 as renewal_from_arr_cfx_actuals,
             sum(renewal_from_arr_cfx) as renewal_from_arr_cfx_lq,
             0 as renewal_from_arr_cfx_ly,
             0 as renewal_from_arr_cfx_lylq,
             0 as renewal_from_arr_cfx_lwk,

             0 as renewal_to_arr_cfx_actuals,
             sum(renewal_to_arr_cfx) as renewal_to_arr_cfx_lq,
             0 as renewal_to_arr_cfx_ly,
             0 as renewal_to_arr_cfx_lylq,
             0 as renewal_to_arr_cfx_lwk,

             0 as net_purchases_arr_cfx_unclaimed_actuals,
             sum(net_purchases_arr_cfx_unclaimed) as net_purchases_arr_cfx_unclaimed_lq,
             0 as net_purchases_arr_cfx_unclaimed_ly,
             0 as net_purchases_arr_cfx_unclaimed_lylq,
             0 as net_purchases_arr_cfx_unclaimed_lwk,

             0 as gross_new_arr_cfx_unclaimed_actuals,
             sum(gross_new_arr_cfx_unclaimed) as gross_new_arr_cfx_unclaimed_lq,
             0 as gross_new_arr_cfx_unclaimed_ly,
             0 as gross_new_arr_cfx_unclaimed_lylq,
             0 as gross_new_arr_cfx_unclaimed_lwk,

             0 as net_migration_arr_cfx_actuals,
             sum(net_migration_arr_cfx) as net_migration_arr_cfx_lq,
             0 as net_migration_arr_cfx_ly,
             0 as net_migration_arr_cfx_lylq,
             0 as net_migration_arr_cfx_lwk,
             0 as net_migration_arr_qrf,

             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc
             from (
             select a.*,b.standard_team_name,b.Team_category from 
             (select * from df_final where FISCAL_YR_AND_WK_DESC in ({weeks_lq})) a
             left outer join (select DISTINCT team_key,standard_team_name,Team_category from {STG3_TBL}) b
             on a.TeamKey = b.Team_key
             ) basetbl
             group by 
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc,
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             PROMO_TYPE,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             standard_team_name,
             Team_category,
             Txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language,
             Channel,
             Surface_app_id,
             queue,
             queue_type,
             transfer_in_Queue,
             transfer_in_Agent,
             transfer_out_Queue,
             transfer_out_Agent 
             ) base
             left outer join
             df_rtb_lookup rtb
             on base.fiscal_yr_and_wk_desc = rtb.fiscal_yr_and_wk_in_lqtr
             """.format(STG3_TBL=STG3_TBL,weeks_lq=weeks_lq))
             df_data_lq.createOrReplaceTempView("df_data_lq")

             query = "Select distinct fiscal_yr_and_wk_ly from df_rtb_lookup"
             result_df = spark.sql(query)
             values_list = [row.fiscal_yr_and_wk_ly for row in result_df.collect()]
             weeks_ly = ",".join(f"'{value}'" for value in values_list)

             df_data_ly = spark.sql("""
             select
             base.geo,
             base.market_area,
             base.market_area_description,
             base.market_segment,
             base.cc_phone_vs_web,
             base.cc_segment,
             base.product_group,
             base.sub_product_group,
             base.STYPE,
             base.projected_dme_gtm_segment,
             base.gtm_acct_segment,
             base.route_to_market,
             base.promotion,
             base.promo_type,
             base.sales_district,
             base.sales_center,
             base.repname,
             base.con_RepLdap as RepLdap,
             base.reptsm,
             base.repmanger,
             base.standard_team_name as repteam,
             base.Team_category as Team_category,
             base.txns as transaction_type,
             base.net_purchases_deal_band,
             base.net_cancelled_deal_band,
             base.net_purchases_deal_band_overall,
             base.net_cancelled_deal_band_overall,
             base.Language,
             base.Channel,
             base.Surface_app_id,
             base.queue,
             base.queue_type,
             base.transfer_in_Queue,
             base.transfer_in_Agent,
             base.transfer_out_Queue,
             base.transfer_out_Agent,
             base.entered_actuals,
             base.entered_lq,
             base.entered_ly,
             base.entered_lylq,
             base.entered_lwk,
             base.offered_actuals,
             base.offered_lq,
             base.offered_ly,
             base.offered_lylq,
             base.offered_lwk,
             base.accepeted_actuals,
             base.accepeted_lq,
             base.accepeted_ly,
             base.accepeted_lylq,
             base.accepeted_lwk,
             base.abandoned_actuals,
             base.abandoned_lq,
             base.abandoned_ly,
             base.abandoned_lylq,
             base.abandoned_lwk,
             base.Non_Interactive_actuals,
             base.Non_Interactive_lq,
             base.Non_Interactive_ly,
             base.Non_Interactive_lylq,
             base.Non_Interactive_lwk,
             base.Wrap_time_min_actuals,
             base.Wrap_time_min_lq,
             base.Wrap_time_min_ly,
             base.Wrap_time_min_lylq,
             base.Wrap_time_min_lwk,
             base.Talk_time_min_actuals,
             base.Talk_time_min_lq,
             base.Talk_time_min_ly,
             base.Talk_time_min_lylq,
             base.Talk_time_min_lwk,
             base.transfer_in_actuals,
             base.transfer_in_lq,
             base.transfer_in_ly,
             base.transfer_in_lylq,
             base.transfer_in_lwk,
             base.transfer_out_actuals,
             base.transfer_out_lq,
             base.transfer_out_ly,
             base.transfer_out_lylq,
             base.transfer_out_lwk,
             base.incremental_arr_actuals,
             base.incremental_arr_lq,
             base.incremental_arr_ly,
             base.incremental_arr_lylq,
             base.incremental_arr_lwk,
             base.Incremental_arr_customer_addon_actuals,
             base.Incremental_arr_customer_addon_lq,
             base.Incremental_arr_customer_addon_ly,
             base.Incremental_arr_customer_addon_lylq,
             base.Incremental_arr_customer_addon_lwk,
             base.addl_purchase_diff_actuals,
             base.addl_purchase_diff_lq,
             base.addl_purchase_diff_ly,
             base.addl_purchase_diff_lylq,
             base.addl_purchase_diff_lwk,
             base.addl_purchase_same_actuals,
             base.addl_purchase_same_lq,
             base.addl_purchase_same_ly,
             base.addl_purchase_same_lylq,
             base.addl_purchase_same_lwk,
             base.gross_cancel_arr_cfx_actuals,
             base.gross_cancel_arr_cfx_lq,
             base.gross_cancel_arr_cfx_ly,
             base.gross_cancel_arr_cfx_lylq,
             base.gross_cancel_arr_cfx_lwk,
             base.gross_new_arr_cfx_actuals,
             base.gross_new_arr_cfx_lq,
             base.gross_new_arr_cfx_ly,
             base.gross_new_arr_cfx_lylq,
             base.gross_new_arr_cfx_lwk,
             base.gross_new_subs_actuals,
             base.gross_new_subs_lq,
             base.gross_new_subs_ly,
             base.gross_new_subs_lylq,
             base.gross_new_subs_lwk,
             base.init_purchase_arr_cfx_actuals,
             base.init_purchase_arr_cfx_lq,
             base.init_purchase_arr_cfx_ly,
             base.init_purchase_arr_cfx_lylq,
             base.init_purchase_arr_cfx_lwk,
             base.migrated_from_arr_cfx_actuals,
             base.migrated_from_arr_cfx_lq,
             base.migrated_from_arr_cfx_ly,
             base.migrated_from_arr_cfx_lylq,
             base.migrated_from_arr_cfx_lwk,
             base.migrated_to_arr_cfx_actuals,
             base.migrated_to_arr_cfx_lq,
             base.migrated_to_arr_cfx_ly,
             base.migrated_to_arr_cfx_lylq,
             base.migrated_to_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_actuals,
             base.net_cancelled_arr_cfx_lq,
             base.net_cancelled_arr_cfx_ly,
             base.net_cancelled_arr_cfx_lylq,
             base.net_cancelled_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_qrf,
             base.net_new_arr_cfx_actuals,
             base.net_new_arr_cfx_lq,
             base.net_new_arr_cfx_ly,
             base.net_new_arr_cfx_lylq,
             base.net_new_arr_cfx_lwk,
             base.net_new_subs_actuals,
             base.net_new_subs_lq,
             base.net_new_subs_ly,
             base.net_new_subs_lylq,
             base.net_new_subs_lwk,
             base.net_purchases_arr_cfx_actuals,
             base.net_purchases_arr_cfx_lq,
             base.net_purchases_arr_cfx_ly,
             base.net_purchases_arr_cfx_lylq,
             base.net_purchases_arr_cfx_lwk,
             base.net_purchases_arr_qrf,
             base.net_purchases_arr_buffer_qrf,
             base.net_purchases_arr_gt_5K_actuals,
             base.net_purchases_arr_gt_5K_lq,
             base.net_purchases_arr_gt_5K_ly,
             base.net_purchases_arr_gt_5K_lylq,
             base.net_purchases_arr_gt_5K_lwk,
             base.net_purchases_arr_ls_5K_actuals,
             base.net_purchases_arr_ls_5K_lq,
             base.net_purchases_arr_ls_5K_ly,
             base.net_purchases_arr_ls_5K_lylq,
             base.net_purchases_arr_ls_5K_lwk,
             base.orders_gt_5K_actuals,
             base.orders_gt_5K_lq,
             base.orders_gt_5K_ly,
             base.orders_gt_5K_lylq,
             base.orders_gt_5K_lwk,

             base.orders_ls_5K_actuals,
             base.orders_ls_5K_lq,
             base.orders_ls_5K_ly,
             base.orders_ls_5K_lylq,
             base.orders_ls_5K_lwk,
             base.reactivated_arr_cfx_actuals,
             base.reactivated_arr_cfx_lq,
             base.reactivated_arr_cfx_ly,
             base.reactivated_arr_cfx_lylq,
             base.reactivated_arr_cfx_lwk,
             base.returns_arr_cfx_actuals,
             base.returns_arr_cfx_lq,
             base.returns_arr_cfx_ly,
             base.returns_arr_cfx_lylq,
             base.returns_arr_cfx_lwk,
             base.renewal_from_arr_cfx_actuals,
             base.renewal_from_arr_cfx_lq,
             base.renewal_from_arr_cfx_ly,
             base.renewal_from_arr_cfx_lylq,
             base.renewal_from_arr_cfx_lwk,
             base.renewal_to_arr_cfx_actuals,
             base.renewal_to_arr_cfx_lq,
             base.renewal_to_arr_cfx_ly,
             base.renewal_to_arr_cfx_lylq,
             base.renewal_to_arr_cfx_lwk,
             base.net_purchases_arr_cfx_unclaimed_actuals,
             base.net_purchases_arr_cfx_unclaimed_lq,
             base.net_purchases_arr_cfx_unclaimed_ly,
             base.net_purchases_arr_cfx_unclaimed_lylq,
             base.net_purchases_arr_cfx_unclaimed_lwk,
             base.gross_new_arr_cfx_unclaimed_actuals,
             base.gross_new_arr_cfx_unclaimed_lq,
             base.gross_new_arr_cfx_unclaimed_ly,
             base.gross_new_arr_cfx_unclaimed_lylq,
             base.gross_new_arr_cfx_unclaimed_lwk,
             base.net_migration_arr_cfx_actuals,
             base.net_migration_arr_cfx_ly,
             base.net_migration_arr_cfx_lq,
             base.net_migration_arr_cfx_lylq,
             base.net_migration_arr_cfx_lwk,
             base.net_migration_arr_qrf,
             rtb.fiscal_yr_and_wk_desc_actual as fiscal_yr_and_wk_desc,
             rtb.fiscal_yr_and_qtr_desc_rtb as fiscal_yr_and_qtr_desc

             from
             ( 
             select
             GEO as geo,
             MARKET_AREA as market_area,
             market_area_description as market_area_description,
             MARKET_SEGMENT as market_segment,
             cc_phone_vs_web as cc_phone_vs_web,
             cc_segment as cc_segment,
             product_group as product_group,
             sub_product_group as  sub_product_group,
             STYPE as STYPE,
             projected_dme_gtm_segment as projected_dme_gtm_segment,
             gtm_acct_segment as gtm_acct_segment,
             route_to_market as route_to_market,
             PROMOTION as promotion,
             PROMO_TYPE as promo_type,
             SALES_DISTRICT as sales_district,
             Sales_Center as sales_center,
             RepName as repname,
             con_RepLdap as con_RepLdap,
             RepTSM as reptsm,
             RepManger as repmanger,
             standard_team_name as standard_team_name,
             Team_category as Team_category,
             Txns as txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language as Language,
             Channel as Channel,
             Surface_app_id as Surface_app_id,
             queue as queue,
             queue_type as queue_type,
             transfer_in_Queue as transfer_in_Queue,
             transfer_in_Agent as transfer_in_Agent,
             transfer_out_Queue as transfer_out_Queue,
             transfer_out_Agent as transfer_out_Agent,

             0 as entered_actuals,
             0 as entered_lq,
             sum(entered) as entered_ly,
             0 as entered_lylq,
             0 as entered_lwk,

             0 as offered_actuals,
             0 as offered_lq,
             sum(offered) as offered_ly,
             0 as offered_lylq,
             0 as offered_lwk,

             0 as accepeted_actuals,
             0 as accepeted_lq,
             sum(accepeted) as accepeted_ly,
             0 as accepeted_lylq,
             0 as accepeted_lwk,

             0 as abandoned_actuals,
             0 as abandoned_lq,
             sum(accepeted) as abandoned_ly,
             0 as abandoned_lylq,
             0 as abandoned_lwk,

             0 as Non_Interactive_actuals,
             0 as Non_Interactive_lq,
             sum(Non_Interactive) as Non_Interactive_ly,
             0 as Non_Interactive_lylq,
             0 as Non_Interactive_lwk,

             0 as Wrap_time_min_actuals,
             0 as Wrap_time_min_lq,
             sum(Wrap_time_min) as Wrap_time_min_ly,
             0 as Wrap_time_min_lylq,
             0 as Wrap_time_min_lwk,

             0 as Talk_time_min_actuals,
             0 as Talk_time_min_lq,
             sum(Talk_time_min) as Talk_time_min_ly,
             0 as Talk_time_min_lylq,
             0 as Talk_time_min_lwk,

             0 as transfer_in_actuals,
             0 as transfer_in_lq,
             sum(transfer_in) as transfer_in_ly,
             0 as transfer_in_lylq,
             0 as transfer_in_lwk,

             0 as transfer_out_actuals,
             0 as transfer_out_lq,
             sum(transfer_out) as transfer_out_ly,
             0 as transfer_out_lylq,
             0 as transfer_out_lwk,

             0 as incremental_arr_actuals,
             0 as incremental_arr_lq,
             sum(incremental_arr) as incremental_arr_ly,
             0 as incremental_arr_lylq,
             0 as incremental_arr_lwk,

             0 as Incremental_arr_customer_addon_actuals,
             0 as Incremental_arr_customer_addon_lq,
             sum(Incremental_arr_customer_addon) as Incremental_arr_customer_addon_ly,
             0 as Incremental_arr_customer_addon_lylq,
             0 as Incremental_arr_customer_addon_lwk,

             0 as  addl_purchase_diff_actuals,
             0 as addl_purchase_diff_lq,
             sum(addl_purchase_diff) as addl_purchase_diff_ly,
             0 as addl_purchase_diff_lylq,
             0 as addl_purchase_diff_lwk,

             0 as addl_purchase_same_actuals,
             0 as addl_purchase_same_lq,
             sum(addl_purchase_same) as addl_purchase_same_ly,
             0 as addl_purchase_same_lylq,
             0 as addl_purchase_same_lwk,

             0 as gross_cancel_arr_cfx_actuals,
             0 as gross_cancel_arr_cfx_lq,
             sum(gross_cancel_arr_cfx) as gross_cancel_arr_cfx_ly,
             0 as gross_cancel_arr_cfx_lylq,
             0 as gross_cancel_arr_cfx_lwk,

             0 as gross_new_arr_cfx_actuals,
             0 as gross_new_arr_cfx_lq,
             sum(gross_new_arr_cfx) as gross_new_arr_cfx_ly,
             0 as gross_new_arr_cfx_lylq,
             0 as gross_new_arr_cfx_lwk,

             0 as gross_new_subs_actuals,
             0 as gross_new_subs_lq,
             sum(gross_new_subs) as gross_new_subs_ly,
             0 as gross_new_subs_lylq,
             0 as gross_new_subs_lwk,

             0 as init_purchase_arr_cfx_actuals,
             0 as init_purchase_arr_cfx_lq,
             sum(init_purchase_arr_cfx) as init_purchase_arr_cfx_ly,
             0 as init_purchase_arr_cfx_lylq,
             0 as init_purchase_arr_cfx_lwk,

             0 as migrated_from_arr_cfx_actuals,
             0 as migrated_from_arr_cfx_lq,
             sum(migrated_from_arr_cfx) as migrated_from_arr_cfx_ly,
             0 as migrated_from_arr_cfx_lylq,
             0 as migrated_from_arr_cfx_lwk,

             0 as migrated_to_arr_cfx_actuals,
             0 as migrated_to_arr_cfx_lq,
             sum(migrated_to_arr_cfx) as migrated_to_arr_cfx_ly,
             0 as migrated_to_arr_cfx_lylq,
             0 as migrated_to_arr_cfx_lwk,
   
             0 as net_cancelled_arr_cfx_actuals,
             0 as net_cancelled_arr_cfx_lq,
             sum(net_cancelled_arr_cfx) as net_cancelled_arr_cfx_ly,
             0 as net_cancelled_arr_cfx_lylq,
             0 as net_cancelled_arr_cfx_lwk,
             0 as net_cancelled_arr_cfx_qrf,

             0 as net_new_arr_cfx_actuals,
             0 as net_new_arr_cfx_lq,
             sum(net_new_arr_cfx) as net_new_arr_cfx_ly,
             0 as net_new_arr_cfx_lylq,
             0 as net_new_arr_cfx_lwk,

             0 as net_new_subs_actuals,
             0 as net_new_subs_lq,
             sum(net_new_subs) as net_new_subs_ly,
             0 as net_new_subs_lylq,
             0 as net_new_subs_lwk,

             0 as net_purchases_arr_cfx_actuals,
             0 as net_purchases_arr_cfx_lq,
             sum(net_purchases_arr_cfx) as net_purchases_arr_cfx_ly,
             0 as net_purchases_arr_cfx_lylq,
             0 as net_purchases_arr_cfx_lwk,
             0 as net_purchases_arr_qrf,
             0 as net_purchases_arr_buffer_qrf,

             0 as net_purchases_arr_gt_5K_actuals,
             0 as net_purchases_arr_gt_5K_lq,
             sum(net_purchases_arr_gt_5K) as net_purchases_arr_gt_5K_ly,
             0 as net_purchases_arr_gt_5K_lylq,
             0 as net_purchases_arr_gt_5K_lwk,

             0 as net_purchases_arr_ls_5K_actuals,
             0 as net_purchases_arr_ls_5K_lq,
             sum(net_purchases_arr_ls_5K) as net_purchases_arr_ls_5K_ly,
             0 as net_purchases_arr_ls_5K_lylq,
             0 as net_purchases_arr_ls_5K_lwk,

             0 as orders_gt_5K_actuals,
             0 as orders_gt_5K_lq,
             sum(orders_gt_5K)  as orders_gt_5K_ly,
             0 as orders_gt_5K_lylq,
             0 as orders_gt_5K_lwk,

             0 as orders_ls_5K_actuals,
             0 as orders_ls_5K_lq,
             sum(orders_ls_5K) as orders_ls_5K_ly,
             0 as orders_ls_5K_lylq,
             0 as orders_ls_5K_lwk,

             0 as reactivated_arr_cfx_actuals,
             0 as reactivated_arr_cfx_lq,
             sum(reactivated_arr_cfx) as reactivated_arr_cfx_ly,
             0 as reactivated_arr_cfx_lylq,
             0 as reactivated_arr_cfx_lwk,

             0 as returns_arr_cfx_actuals,
             0 as returns_arr_cfx_lq,
             sum(returns_arr_cfx) as returns_arr_cfx_ly,
             0 as returns_arr_cfx_lylq,
             0 as returns_arr_cfx_lwk,

             0 as renewal_from_arr_cfx_actuals,
             0 as renewal_from_arr_cfx_lq,
             sum(renewal_from_arr_cfx) as renewal_from_arr_cfx_ly,
             0 as renewal_from_arr_cfx_lylq,
             0 as renewal_from_arr_cfx_lwk,

             0 as renewal_to_arr_cfx_actuals,
             0 as renewal_to_arr_cfx_lq,
             sum(renewal_to_arr_cfx) as renewal_to_arr_cfx_ly,
             0 as renewal_to_arr_cfx_lylq,
             0 as renewal_to_arr_cfx_lwk,

             0 as net_purchases_arr_cfx_unclaimed_actuals,
             0 as net_purchases_arr_cfx_unclaimed_lq,
             sum(net_purchases_arr_cfx_unclaimed) as net_purchases_arr_cfx_unclaimed_ly,
             0 as net_purchases_arr_cfx_unclaimed_lylq,
             0 as net_purchases_arr_cfx_unclaimed_lwk,

             0 as gross_new_arr_cfx_unclaimed_actuals,
             0 as gross_new_arr_cfx_unclaimed_lq,
             sum(gross_new_arr_cfx_unclaimed) as gross_new_arr_cfx_unclaimed_ly,
             0 as gross_new_arr_cfx_unclaimed_lylq,
             0 as gross_new_arr_cfx_unclaimed_lwk,

             0 as net_migration_arr_cfx_actuals,
             0 as net_migration_arr_cfx_ly,
             sum(net_migration_arr_cfx) as net_migration_arr_cfx_lq,
             0 as net_migration_arr_cfx_lylq,
             0 as net_migration_arr_cfx_lwk,
             0 as net_migration_arr_qrf,

             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc

             from (
             select a.*,b.standard_team_name,b.Team_category from 
             (select * from df_final where FISCAL_YR_AND_WK_DESC in ({weeks_ly})) a
             left outer join (select DISTINCT team_key,standard_team_name,Team_category from {STG3_TBL}) b
             on a.TeamKey = b.Team_key
             ) basetbl

             group by 
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc,
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             PROMO_TYPE,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             standard_team_name,
             Team_category,
             Txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language,
             Channel,
             Surface_app_id,
             queue,
             queue_type,
             transfer_in_Queue,
             transfer_in_Agent,
             transfer_out_Queue,
             transfer_out_Agent 
             ) base
             left outer join
             df_rtb_lookup rtb
             on base.fiscal_yr_and_wk_desc = rtb.fiscal_yr_and_wk_ly
             """.format(STG3_TBL=STG3_TBL,weeks_ly=weeks_ly))
             df_data_ly.createOrReplaceTempView("df_data_ly")


             query = "Select distinct fiscal_yr_and_wk_in_lylq from df_rtb_lookup"
             result_df = spark.sql(query)
             values_list = [row.fiscal_yr_and_wk_in_lylq for row in result_df.collect()]
             weeks_lylq = ",".join(f"'{value}'" for value in values_list)

             df_data_lylq = spark.sql("""
             select
             base.geo,
             base.market_area,
             base.market_area_description,
             base.market_segment,
             base.cc_phone_vs_web,
             base.cc_segment,
             base.product_group,
             base.sub_product_group,
             base.STYPE,
             base.projected_dme_gtm_segment,
             base.gtm_acct_segment,
             base.route_to_market,
             base.promotion,
             base.promo_type,
             base.sales_district,
             base.sales_center,
             base.repname,
             base.con_RepLdap as RepLdap,
             base.reptsm,
             base.repmanger,
             base.standard_team_name as repteam,
             base.Team_category as Team_category,
             base.txns as transaction_type,
             base.net_purchases_deal_band,
             base.net_cancelled_deal_band,
             base.net_purchases_deal_band_overall,
             base.net_cancelled_deal_band_overall,
             base.Language,
             base.Channel,
             base.Surface_app_id,
             base.queue,
             base.queue_type,
             base.transfer_in_Queue,
             base.transfer_in_Agent,
             base.transfer_out_Queue,
             base.transfer_out_Agent,
             base.entered_actuals,
             base.entered_lq,
             base.entered_ly,
             base.entered_lylq,
             base.entered_lwk,
             base.offered_actuals,
             base.offered_lq,
             base.offered_ly,
             base.offered_lylq,
             base.offered_lwk,
             base.accepeted_actuals,
             base.accepeted_lq,
             base.accepeted_ly,
             base.accepeted_lylq,
             base.accepeted_lwk,
             base.abandoned_actuals,
             base.abandoned_lq,
             base.abandoned_ly,
             base.abandoned_lylq,
             base.abandoned_lwk,
             base.Non_Interactive_actuals,
             base.Non_Interactive_lq,
             base.Non_Interactive_ly,
             base.Non_Interactive_lylq,
             base.Non_Interactive_lwk,
             base.Wrap_time_min_actuals,
             base.Wrap_time_min_lq,
             base.Wrap_time_min_ly,
             base.Wrap_time_min_lylq,
             base.Wrap_time_min_lwk,
             base.Talk_time_min_actuals,
             base.Talk_time_min_lq,
             base.Talk_time_min_ly,
             base.Talk_time_min_lylq,
             base.Talk_time_min_lwk,
             base.transfer_in_actuals,
             base.transfer_in_lq,
             base.transfer_in_ly,
             base.transfer_in_lylq,
             base.transfer_in_lwk,
             base.transfer_out_actuals,
             base.transfer_out_lq,
             base.transfer_out_ly,
             base.transfer_out_lylq,
             base.transfer_out_lwk,
             base.incremental_arr_actuals,
             base.incremental_arr_lq,
             base.incremental_arr_ly,
             base.incremental_arr_lylq,
             base.incremental_arr_lwk,
             base.Incremental_arr_customer_addon_actuals,
             base.Incremental_arr_customer_addon_lq,
             base.Incremental_arr_customer_addon_ly,
             base.Incremental_arr_customer_addon_lylq,
             base.Incremental_arr_customer_addon_lwk,
             base.addl_purchase_diff_actuals,
             base.addl_purchase_diff_lq,
             base.addl_purchase_diff_ly,
             base.addl_purchase_diff_lylq,
             base.addl_purchase_diff_lwk,
             base.addl_purchase_same_actuals,
             base.addl_purchase_same_lq,
             base.addl_purchase_same_ly,
             base.addl_purchase_same_lylq,
             base.addl_purchase_same_lwk,
             base.gross_cancel_arr_cfx_actuals,
             base.gross_cancel_arr_cfx_lq,
             base.gross_cancel_arr_cfx_ly,
             base.gross_cancel_arr_cfx_lylq,
             base.gross_cancel_arr_cfx_lwk,
             base.gross_new_arr_cfx_actuals,
             base.gross_new_arr_cfx_lq,
             base.gross_new_arr_cfx_ly,
             base.gross_new_arr_cfx_lylq,
             base.gross_new_arr_cfx_lwk,
             base.gross_new_subs_actuals,
             base.gross_new_subs_lq,
             base.gross_new_subs_ly,
             base.gross_new_subs_lylq,
             base.gross_new_subs_lwk,
             base.init_purchase_arr_cfx_actuals,
             base.init_purchase_arr_cfx_lq,
             base.init_purchase_arr_cfx_ly,
             base.init_purchase_arr_cfx_lylq,
             base.init_purchase_arr_cfx_lwk,
             base.migrated_from_arr_cfx_actuals,
             base.migrated_from_arr_cfx_lq,
             base.migrated_from_arr_cfx_ly,
             base.migrated_from_arr_cfx_lylq,
             base.migrated_from_arr_cfx_lwk,
             base.migrated_to_arr_cfx_actuals,
             base.migrated_to_arr_cfx_lq,
             base.migrated_to_arr_cfx_ly,
             base.migrated_to_arr_cfx_lylq,
             base.migrated_to_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_actuals,
             base.net_cancelled_arr_cfx_lq,
             base.net_cancelled_arr_cfx_ly,
             base.net_cancelled_arr_cfx_lylq,
             base.net_cancelled_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_qrf,

             base.net_new_arr_cfx_actuals,
             base.net_new_arr_cfx_lq,
             base.net_new_arr_cfx_ly,
             base.net_new_arr_cfx_lylq,
             base.net_new_arr_cfx_lwk,
             base.net_new_subs_actuals,
             base.net_new_subs_lq,
             base.net_new_subs_ly,
             base.net_new_subs_lylq,
             base.net_new_subs_lwk,
             base.net_purchases_arr_cfx_actuals,
             base.net_purchases_arr_cfx_lq,
             base.net_purchases_arr_cfx_ly,
             base.net_purchases_arr_cfx_lylq,
             base.net_purchases_arr_cfx_lwk,
             base.net_purchases_arr_qrf,
             base.net_purchases_arr_buffer_qrf,
             base.net_purchases_arr_gt_5K_actuals,
             base.net_purchases_arr_gt_5K_lq,
             base.net_purchases_arr_gt_5K_ly,
             base.net_purchases_arr_gt_5K_lylq,
             base.net_purchases_arr_gt_5K_lwk,
             base.net_purchases_arr_ls_5K_actuals,
             base.net_purchases_arr_ls_5K_lq,
             base.net_purchases_arr_ls_5K_ly,
             base.net_purchases_arr_ls_5K_lylq,
             base.net_purchases_arr_ls_5K_lwk,

             base.orders_gt_5K_actuals,
             base.orders_gt_5K_lq,
             base.orders_gt_5K_ly,
             base.orders_gt_5K_lylq,
             base.orders_gt_5K_lwk,

             base.orders_ls_5K_actuals,
             base.orders_ls_5K_lq,
             base.orders_ls_5K_ly,
             base.orders_ls_5K_lylq,
             base.orders_ls_5K_lwk,

             base.reactivated_arr_cfx_actuals,
             base.reactivated_arr_cfx_lq,
             base.reactivated_arr_cfx_ly,
             base.reactivated_arr_cfx_lylq,
             base.reactivated_arr_cfx_lwk,
             base.returns_arr_cfx_actuals,
             base.returns_arr_cfx_lq,
             base.returns_arr_cfx_ly,
             base.returns_arr_cfx_lylq,
             base.returns_arr_cfx_lwk,
             base.renewal_from_arr_cfx_actuals,
             base.renewal_from_arr_cfx_lq,
             base.renewal_from_arr_cfx_ly,
             base.renewal_from_arr_cfx_lylq,
             base.renewal_from_arr_cfx_lwk,
             base.renewal_to_arr_cfx_actuals,
             base.renewal_to_arr_cfx_lq,
             base.renewal_to_arr_cfx_ly,
             base.renewal_to_arr_cfx_lylq,
             base.renewal_to_arr_cfx_lwk,
             base.net_purchases_arr_cfx_unclaimed_actuals,
             base.net_purchases_arr_cfx_unclaimed_lq,
             base.net_purchases_arr_cfx_unclaimed_ly,
             base.net_purchases_arr_cfx_unclaimed_lylq,
             base.net_purchases_arr_cfx_unclaimed_lwk,
             base.gross_new_arr_cfx_unclaimed_actuals,
             base.gross_new_arr_cfx_unclaimed_lq,
             base.gross_new_arr_cfx_unclaimed_ly,
             base.gross_new_arr_cfx_unclaimed_lylq,
             base.gross_new_arr_cfx_unclaimed_lwk,
             base.net_migration_arr_cfx_actuals,
             base.net_migration_arr_cfx_ly,
             base.net_migration_arr_cfx_lq,
             base.net_migration_arr_cfx_lylq,
             base.net_migration_arr_cfx_lwk,
             base.net_migration_arr_qrf,

             rtb.fiscal_yr_and_wk_desc_actual as fiscal_yr_and_wk_desc,
             rtb.fiscal_yr_and_qtr_desc_rtb as fiscal_yr_and_qtr_desc
             from
             (
             select
             GEO as geo,
             MARKET_AREA as market_area,
             market_area_description as market_area_description,
             MARKET_SEGMENT as market_segment,
             cc_phone_vs_web as cc_phone_vs_web,
             cc_segment as cc_segment,
             product_group as product_group,
             sub_product_group as  sub_product_group,
             STYPE as STYPE,
             projected_dme_gtm_segment as projected_dme_gtm_segment,
             gtm_acct_segment as gtm_acct_segment,
             route_to_market as route_to_market,
             PROMOTION as promotion,
             PROMO_TYPE as promo_type,
             SALES_DISTRICT as sales_district,
             Sales_Center as sales_center,
             RepName as repname,
             con_RepLdap as con_RepLdap,
             RepTSM as reptsm,
             RepManger as repmanger,
             standard_team_name as standard_team_name,
             Team_category as Team_category,
             Txns as txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language as Language,
             Channel as Channel,
             Surface_app_id as Surface_app_id,
             queue as queue,
             queue_type as queue_type,
             transfer_in_Queue as transfer_in_Queue,
             transfer_in_Agent as transfer_in_Agent,
             transfer_out_Queue as transfer_out_Queue,
             transfer_out_Agent as transfer_out_Agent,

             0 as entered_actuals,
             0 as entered_lq,
             0 as entered_ly,
             sum(entered) as entered_lylq,
             0 as entered_lwk,

             0 as offered_actuals,
             0 as offered_lq,
             0 as offered_ly,
             sum(offered) as offered_lylq,
             0 as offered_lwk,

             0 as accepeted_actuals,
             0 as accepeted_lq,
             0 as accepeted_ly,
             sum(accepeted) as accepeted_lylq,
             0 as accepeted_lwk,

             0 as abandoned_actuals,
             0 as abandoned_lq,
             0 as abandoned_ly,
             sum(abandoned)as abandoned_lylq,
             0 as abandoned_lwk,

             0 as Non_Interactive_actuals,
             0 as Non_Interactive_lq,
             0 as Non_Interactive_ly,
             sum(Non_Interactive) as Non_Interactive_lylq,
             0 as Non_Interactive_lwk,

             0 as Wrap_time_min_actuals,
             0 as Wrap_time_min_lq,
             0 as Wrap_time_min_ly,
             sum(Wrap_time_min) as Wrap_time_min_lylq,
             0 as Wrap_time_min_lwk,

             0 as Talk_time_min_actuals,
             0 as Talk_time_min_lq,
             0 as Talk_time_min_ly,
             sum(Talk_time_min) as Talk_time_min_lylq,
             0 as Talk_time_min_lwk,

             0 as transfer_in_actuals,
             0 as transfer_in_lq,
             0 as transfer_in_ly,
             sum(transfer_in) as transfer_in_lylq,
             0 as transfer_in_lwk,

             0 as transfer_out_actuals,
             0 as transfer_out_lq,
             0 as transfer_out_ly,
             sum(transfer_out) as transfer_out_lylq,
             0 as transfer_out_lwk,

             0 as incremental_arr_actuals,
             0 as incremental_arr_lq,
             0 as incremental_arr_ly,
             sum(incremental_arr) as incremental_arr_lylq,
             0 as incremental_arr_lwk,

             0 as Incremental_arr_customer_addon_actuals,
             0 as Incremental_arr_customer_addon_lq,
             0 as Incremental_arr_customer_addon_ly,
             sum(Incremental_arr_customer_addon) as Incremental_arr_customer_addon_lylq,
             0 as Incremental_arr_customer_addon_lwk,

             0 as  addl_purchase_diff_actuals,
             0 as addl_purchase_diff_lq,
             0 as addl_purchase_diff_ly,
             sum(addl_purchase_diff) as addl_purchase_diff_lylq,
             0 as addl_purchase_diff_lwk,

             0 as addl_purchase_same_actuals,
             0 as addl_purchase_same_lq,
             0 as addl_purchase_same_ly,
             sum(addl_purchase_same) as addl_purchase_same_lylq,
             0 as addl_purchase_same_lwk,

             0 as gross_cancel_arr_cfx_actuals,
             0 as gross_cancel_arr_cfx_lq,
             0 as gross_cancel_arr_cfx_ly,
             sum(gross_cancel_arr_cfx) as gross_cancel_arr_cfx_lylq,
             0 as gross_cancel_arr_cfx_lwk,

             0 as gross_new_arr_cfx_actuals,
             0 as gross_new_arr_cfx_lq,
             0 as gross_new_arr_cfx_ly,
             sum(gross_new_arr_cfx) as gross_new_arr_cfx_lylq,
             0 as gross_new_arr_cfx_lwk,

             0 as gross_new_subs_actuals,
             0 as gross_new_subs_lq,
             0 as gross_new_subs_ly,
             sum(gross_new_subs) as gross_new_subs_lylq,
             0 as gross_new_subs_lwk,

             0 as init_purchase_arr_cfx_actuals,
             0 as init_purchase_arr_cfx_lq,
             0 as init_purchase_arr_cfx_ly,
             sum(init_purchase_arr_cfx) as init_purchase_arr_cfx_lylq,
             0 as init_purchase_arr_cfx_lwk,

             0 as migrated_from_arr_cfx_actuals,
             0 as migrated_from_arr_cfx_lq,
             0 as migrated_from_arr_cfx_ly,
             sum(migrated_from_arr_cfx) as migrated_from_arr_cfx_lylq,
             0 as migrated_from_arr_cfx_lwk,

             0 as migrated_to_arr_cfx_actuals,
             0 as migrated_to_arr_cfx_lq,
             0 as migrated_to_arr_cfx_ly,
             sum(migrated_to_arr_cfx) as migrated_to_arr_cfx_lylq,
             0 as migrated_to_arr_cfx_lwk,

             0 as net_cancelled_arr_cfx_actuals,
             0 as net_cancelled_arr_cfx_lq,
             0 as net_cancelled_arr_cfx_ly,
             sum(net_cancelled_arr_cfx) as net_cancelled_arr_cfx_lylq,
             0 as net_cancelled_arr_cfx_lwk,
             0 as net_cancelled_arr_cfx_qrf,

             0 as net_new_arr_cfx_actuals,
             0 as net_new_arr_cfx_lq,
             0 as net_new_arr_cfx_ly,
             sum(net_new_arr_cfx) as net_new_arr_cfx_lylq,
             0 as net_new_arr_cfx_lwk,

             0 as net_new_subs_actuals,
             0 as net_new_subs_lq,
             0 as net_new_subs_ly,
             sum(net_new_subs) as net_new_subs_lylq,
             0 as net_new_subs_lwk,

             0 as net_purchases_arr_cfx_actuals,
             0 as net_purchases_arr_cfx_lq,
             0 as net_purchases_arr_cfx_ly,
             sum(net_purchases_arr_cfx) as net_purchases_arr_cfx_lylq,
             0 as net_purchases_arr_cfx_lwk,
             0 as net_purchases_arr_qrf,
             0 as net_purchases_arr_buffer_qrf,

             0 as net_purchases_arr_gt_5K_actuals,
             0 as net_purchases_arr_gt_5K_lq,
             0 as net_purchases_arr_gt_5K_ly,
             sum(net_purchases_arr_gt_5K) as net_purchases_arr_gt_5K_lylq,
             0 as net_purchases_arr_gt_5K_lwk,

             0 as net_purchases_arr_ls_5K_actuals,
             0 as net_purchases_arr_ls_5K_lq,
             0 as net_purchases_arr_ls_5K_ly,
             sum(net_purchases_arr_ls_5K) as net_purchases_arr_ls_5K_lylq,
             0 as net_purchases_arr_ls_5K_lwk,

             0 as orders_gt_5K_actuals,
             0 as orders_gt_5K_lq,
             0 as orders_gt_5K_ly,
             sum(orders_gt_5K) as orders_gt_5K_lylq,
             0 as orders_gt_5K_lwk,

             0 as orders_ls_5K_actuals,
             0 as orders_ls_5K_lq,
             0 as orders_ls_5K_ly,
             sum(orders_ls_5K) as orders_ls_5K_lylq,
             0 as orders_ls_5K_lwk,

             0 as reactivated_arr_cfx_actuals,
             0 as reactivated_arr_cfx_lq,
             0 as reactivated_arr_cfx_ly,
             sum(reactivated_arr_cfx) as reactivated_arr_cfx_lylq,
             0 as reactivated_arr_cfx_lwk,

             0 as returns_arr_cfx_actuals,
             0 as returns_arr_cfx_lq,
             0 as returns_arr_cfx_ly,
             sum(returns_arr_cfx) as returns_arr_cfx_lylq,
             0 as returns_arr_cfx_lwk,

             0 as renewal_from_arr_cfx_actuals,
             0 as renewal_from_arr_cfx_lq,
             0 as renewal_from_arr_cfx_ly,
             sum(renewal_from_arr_cfx) as renewal_from_arr_cfx_lylq,
             0 as renewal_from_arr_cfx_lwk,

             0 as renewal_to_arr_cfx_actuals,
             0 as renewal_to_arr_cfx_lq,
             0 as renewal_to_arr_cfx_ly,
             sum(renewal_to_arr_cfx) as renewal_to_arr_cfx_lylq,
             0 as renewal_to_arr_cfx_lwk,

             0 as net_purchases_arr_cfx_unclaimed_actuals,
             0 as net_purchases_arr_cfx_unclaimed_lq,
             0 as net_purchases_arr_cfx_unclaimed_ly,
             sum(net_purchases_arr_cfx_unclaimed) as net_purchases_arr_cfx_unclaimed_lylq,
             0 as net_purchases_arr_cfx_unclaimed_lwk,

             0 as gross_new_arr_cfx_unclaimed_actuals,
             0 as gross_new_arr_cfx_unclaimed_lq,
             0 as gross_new_arr_cfx_unclaimed_ly,
             sum(gross_new_arr_cfx_unclaimed) as gross_new_arr_cfx_unclaimed_lylq,
             0 as gross_new_arr_cfx_unclaimed_lwk,

             0 as net_migration_arr_cfx_actuals,
             0 as net_migration_arr_cfx_ly,
             0 as net_migration_arr_cfx_lq,
             sum(net_migration_arr_cfx) as net_migration_arr_cfx_lylq,
             0 as net_migration_arr_cfx_lwk,
             0 as net_migration_arr_qrf,

             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc
             from (
             select a.*,b.standard_team_name,b.Team_category from 
             (select * from df_final where FISCAL_YR_AND_WK_DESC in ({weeks_lylq})) a
             left outer join (select DISTINCT team_key,standard_team_name,Team_category from {STG3_TBL}) b
             on a.TeamKey = b.Team_key
             ) basetbl
             group by 
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc,
             
             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             PROMO_TYPE,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             standard_team_name,
             Team_category,
             Txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language,
             Channel,
             Surface_app_id,
             queue,
             queue_type,
             transfer_in_Queue,
             transfer_in_Agent,
             transfer_out_Queue,
             transfer_out_Agent 
             ) base
             left outer join
             df_rtb_lookup rtb
             on base.fiscal_yr_and_wk_desc = rtb.fiscal_yr_and_wk_in_lylq
             """.format(STG3_TBL=STG3_TBL,weeks_lylq=weeks_lylq))
             df_data_lylq.createOrReplaceTempView("df_data_lylq")


             query = "Select distinct fiscal_yr_and_wk_desc_lwk from df_rtb_lookup"
             result_df = spark.sql(query)
             values_list = [row.fiscal_yr_and_wk_desc_lwk for row in result_df.collect()]
             weeks_lwk = ",".join(f"'{value}'" for value in values_list)

             df_data_lwk = spark.sql("""
             select
             base.geo,
             base.market_area,
             base.market_area_description,
             base.market_segment,
             base.cc_phone_vs_web,
             base.cc_segment,
             base.product_group,
             base.sub_product_group,
             base.STYPE,
             base.projected_dme_gtm_segment,
             base.gtm_acct_segment,
             base.route_to_market,
             base.promotion,
             base.promo_type,
             base.sales_district,
             base.sales_center,
             base.repname,
             base.con_RepLdap as RepLdap,
             base.reptsm,
             base.repmanger,
             base.standard_team_name as repteam,
             base.Team_category as Team_category,
             base.txns as transaction_type,
             base.net_purchases_deal_band,
             base.net_cancelled_deal_band,
             base.net_purchases_deal_band_overall,
             base.net_cancelled_deal_band_overall,
             base.Language,
             base.Channel,
             base.Surface_app_id,
             base.queue,
             base.queue_type,
             base.transfer_in_Queue,
             base.transfer_in_Agent,
             base.transfer_out_Queue,
             base.transfer_out_Agent,
             base.entered_actuals,
             base.entered_lq,
             base.entered_ly,
             base.entered_lylq,
             base.entered_lwk,
             base.offered_actuals,
             base.offered_lq,
             base.offered_ly,
             base.offered_lylq,
             base.offered_lwk,
             base.accepeted_actuals,
             base.accepeted_lq,
             base.accepeted_ly,
             base.accepeted_lylq,
             base.accepeted_lwk,
             base.abandoned_actuals,
             base.abandoned_lq,
             base.abandoned_ly,
             base.abandoned_lylq,
             base.abandoned_lwk,
             base.Non_Interactive_actuals,
             base.Non_Interactive_lq,
             base.Non_Interactive_ly,
             base.Non_Interactive_lylq,
             base.Non_Interactive_lwk,
             base.Wrap_time_min_actuals,
             base.Wrap_time_min_lq,
             base.Wrap_time_min_ly,
             base.Wrap_time_min_lylq,
             base.Wrap_time_min_lwk,
             base.Talk_time_min_actuals,
             base.Talk_time_min_lq,
             base.Talk_time_min_ly,
             base.Talk_time_min_lylq,
             base.Talk_time_min_lwk,
             base.transfer_in_actuals,
             base.transfer_in_lq,
             base.transfer_in_ly,
             base.transfer_in_lylq,
             base.transfer_in_lwk,
             base.transfer_out_actuals,
             base.transfer_out_lq,
             base.transfer_out_ly,
             base.transfer_out_lylq,
             base.transfer_out_lwk,
             base.incremental_arr_actuals,
             base.incremental_arr_lq,
             base.incremental_arr_ly,
             base.incremental_arr_lylq,
             base.incremental_arr_lwk,
             base.Incremental_arr_customer_addon_actuals,
             base.Incremental_arr_customer_addon_lq,
             base.Incremental_arr_customer_addon_ly,
             base.Incremental_arr_customer_addon_lylq,
             base.Incremental_arr_customer_addon_lwk,
             base.addl_purchase_diff_actuals,
             base.addl_purchase_diff_lq,
             base.addl_purchase_diff_ly,
             base.addl_purchase_diff_lylq,
             base.addl_purchase_diff_lwk,
             base.addl_purchase_same_actuals,
             base.addl_purchase_same_lq,
             base.addl_purchase_same_ly,
             base.addl_purchase_same_lylq,
             base.addl_purchase_same_lwk,
             base.gross_cancel_arr_cfx_actuals,
             base.gross_cancel_arr_cfx_lq,
             base.gross_cancel_arr_cfx_ly,
             base.gross_cancel_arr_cfx_lylq,
             base.gross_cancel_arr_cfx_lwk,
             base.gross_new_arr_cfx_actuals,
             base.gross_new_arr_cfx_lq,
             base.gross_new_arr_cfx_ly,
             base.gross_new_arr_cfx_lylq,
             base.gross_new_arr_cfx_lwk,
             base.gross_new_subs_actuals,
             base.gross_new_subs_lq,
             base.gross_new_subs_ly,
             base.gross_new_subs_lylq,
             base.gross_new_subs_lwk,
             base.init_purchase_arr_cfx_actuals,
             base.init_purchase_arr_cfx_lq,
             base.init_purchase_arr_cfx_ly,
             base.init_purchase_arr_cfx_lylq,
             base.init_purchase_arr_cfx_lwk,
             base.migrated_from_arr_cfx_actuals,
             base.migrated_from_arr_cfx_lq,
             base.migrated_from_arr_cfx_ly,
             base.migrated_from_arr_cfx_lylq,
             base.migrated_from_arr_cfx_lwk,
             base.migrated_to_arr_cfx_actuals,
             base.migrated_to_arr_cfx_lq,
             base.migrated_to_arr_cfx_ly,
             base.migrated_to_arr_cfx_lylq,
             base.migrated_to_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_actuals,
             base.net_cancelled_arr_cfx_lq,
             base.net_cancelled_arr_cfx_ly,
             base.net_cancelled_arr_cfx_lylq,
             base.net_cancelled_arr_cfx_lwk,
             base.net_cancelled_arr_cfx_qrf,
             base.net_new_arr_cfx_actuals,
             base.net_new_arr_cfx_lq,
             base.net_new_arr_cfx_ly,
             base.net_new_arr_cfx_lylq,
             base.net_new_arr_cfx_lwk,
             base.net_new_subs_actuals,
             base.net_new_subs_lq,
             base.net_new_subs_ly,
             base.net_new_subs_lylq,
             base.net_new_subs_lwk,
             base.net_purchases_arr_cfx_actuals,
             base.net_purchases_arr_cfx_lq,
             base.net_purchases_arr_cfx_ly,
             base.net_purchases_arr_cfx_lylq,
             base.net_purchases_arr_cfx_lwk,
             base.net_purchases_arr_qrf,
             base.net_purchases_arr_buffer_qrf,
             base.net_purchases_arr_gt_5K_actuals,
             base.net_purchases_arr_gt_5K_lq,
             base.net_purchases_arr_gt_5K_ly,
             base.net_purchases_arr_gt_5K_lylq,
             base.net_purchases_arr_gt_5K_lwk,
             base.net_purchases_arr_ls_5K_actuals,
             base.net_purchases_arr_ls_5K_lq,
             base.net_purchases_arr_ls_5K_ly,
             base.net_purchases_arr_ls_5K_lylq,
             base.net_purchases_arr_ls_5K_lwk,
             base.orders_gt_5K_actuals,
             base.orders_gt_5K_lq,
             base.orders_gt_5K_ly,
             base.orders_gt_5K_lylq,
             base.orders_gt_5K_lwk,
             base.orders_ls_5K_actuals,
             base.orders_ls_5K_lq,
             base.orders_ls_5K_ly,
             base.orders_ls_5K_lylq,
             base.orders_ls_5K_lwk,
             base.reactivated_arr_cfx_actuals,
             base.reactivated_arr_cfx_lq,
             base.reactivated_arr_cfx_ly,
             base.reactivated_arr_cfx_lylq,
             base.reactivated_arr_cfx_lwk,
             base.returns_arr_cfx_actuals,
             base.returns_arr_cfx_lq,
             base.returns_arr_cfx_ly,
             base.returns_arr_cfx_lylq,
             base.returns_arr_cfx_lwk,
             base.renewal_from_arr_cfx_actuals,
             base.renewal_from_arr_cfx_lq,
             base.renewal_from_arr_cfx_ly,
             base.renewal_from_arr_cfx_lylq,
             base.renewal_from_arr_cfx_lwk,
             base.renewal_to_arr_cfx_actuals,
             base.renewal_to_arr_cfx_lq,
             base.renewal_to_arr_cfx_ly,
             base.renewal_to_arr_cfx_lylq,
             base.renewal_to_arr_cfx_lwk,
             base.net_purchases_arr_cfx_unclaimed_actuals,
             base.net_purchases_arr_cfx_unclaimed_lq,
             base.net_purchases_arr_cfx_unclaimed_ly,
             base.net_purchases_arr_cfx_unclaimed_lylq,
             base.net_purchases_arr_cfx_unclaimed_lwk,
             base.gross_new_arr_cfx_unclaimed_actuals,
             base.gross_new_arr_cfx_unclaimed_lq,
             base.gross_new_arr_cfx_unclaimed_ly,
             base.gross_new_arr_cfx_unclaimed_lylq,
             base.gross_new_arr_cfx_unclaimed_lwk,
             base.net_migration_arr_cfx_actuals,
             base.net_migration_arr_cfx_ly,
             base.net_migration_arr_cfx_lq,
             base.net_migration_arr_cfx_lylq,
             base.net_migration_arr_cfx_lwk,
             base.net_migration_arr_qrf,

             rtb.fiscal_yr_and_wk_desc_actual as fiscal_yr_and_wk_desc,
             rtb.fiscal_yr_and_qtr_desc_rtb as fiscal_yr_and_wk_desc

             from
             (
             select
             GEO as geo,
             MARKET_AREA as market_area,
             market_area_description as market_area_description,
             MARKET_SEGMENT as market_segment,
             cc_phone_vs_web as cc_phone_vs_web,
             cc_segment as cc_segment,
             product_group as product_group,
             sub_product_group as  sub_product_group,
             STYPE as STYPE,
             projected_dme_gtm_segment as projected_dme_gtm_segment,
             gtm_acct_segment as gtm_acct_segment,
             route_to_market as route_to_market,
             PROMOTION as promotion,
             PROMO_TYPE as promo_type,
             SALES_DISTRICT as sales_district,
             Sales_Center as sales_center,
             RepName as repname,
             con_RepLdap as con_RepLdap,
             RepTSM as reptsm,
             RepManger as repmanger,
             standard_team_name as standard_team_name,
             Team_category as Team_category,
             Txns as txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language as Language,
             Channel as Channel,
             Surface_app_id as Surface_app_id,
             queue as queue,
             queue_type as queue_type,
             transfer_in_Queue as transfer_in_Queue,
             transfer_in_Agent as transfer_in_Agent,
             transfer_out_Queue as transfer_out_Queue,
             transfer_out_Agent as transfer_out_Agent,

             0 as entered_actuals,
             0 as entered_lq,
             0 as entered_ly,
             0 as entered_lylq,
             sum(entered) as entered_lwk,

             0 as offered_actuals,
             0 as offered_lq,
             0 as offered_ly,
             0 as offered_lylq,
             sum(offered) as offered_lwk,

             0 as accepeted_actuals,
             0 as accepeted_lq,
             0 as accepeted_ly,
             0 as accepeted_lylq,
             sum(accepeted) as accepeted_lwk,

             0 as abandoned_actuals,
             0 as abandoned_lq,
             0 as abandoned_ly,
             0 as abandoned_lylq,
             sum(abandoned) as abandoned_lwk,

             0 as Non_Interactive_actuals,
             0 as Non_Interactive_lq,
             0 as Non_Interactive_ly,
             0 as Non_Interactive_lylq,
             sum(Non_Interactive) as Non_Interactive_lwk,

             0 as Wrap_time_min_actuals,
             0 as Wrap_time_min_lq,
             0 as Wrap_time_min_ly,
             0 as Wrap_time_min_lylq,
             sum(Wrap_time_min) as Wrap_time_min_lwk,

             0 as Talk_time_min_actuals,
             0 as Talk_time_min_lq,
             0 as Talk_time_min_ly,
             0 as Talk_time_min_lylq,
             sum(Talk_time_min) as Talk_time_min_lwk,

             0 as transfer_in_actuals,
             0 as transfer_in_lq,
             0 as transfer_in_ly,
             0 as transfer_in_lylq,
             sum(transfer_in) as transfer_in_lwk,

             0 as transfer_out_actuals,
             0 as transfer_out_lq,
             0 as transfer_out_ly,
             0 as transfer_out_lylq,
             sum(transfer_out) as transfer_out_lwk,

             0 as incremental_arr_actuals,
             0 as incremental_arr_lq,
             0 as incremental_arr_ly,
             0 as incremental_arr_lylq,
             sum(incremental_arr) as incremental_arr_lwk,

             0 as Incremental_arr_customer_addon_actuals,
             0 as Incremental_arr_customer_addon_lq,
             0 as Incremental_arr_customer_addon_ly,
             0 as Incremental_arr_customer_addon_lylq,
             sum(Incremental_arr_customer_addon) as Incremental_arr_customer_addon_lwk,

             0 as  addl_purchase_diff_actuals,
             0 as addl_purchase_diff_lq,
             0 as addl_purchase_diff_ly,
             0 as addl_purchase_diff_lylq,
             sum(addl_purchase_diff) as addl_purchase_diff_lwk,

             0 as addl_purchase_same_actuals,
             0 as addl_purchase_same_lq,
             0 as addl_purchase_same_ly,
             0 as addl_purchase_same_lylq,
             sum(addl_purchase_same) as addl_purchase_same_lwk,

             0 as gross_cancel_arr_cfx_actuals,
             0 as gross_cancel_arr_cfx_lq,
             0 as gross_cancel_arr_cfx_ly,
             0 as gross_cancel_arr_cfx_lylq,
             sum(gross_cancel_arr_cfx) as gross_cancel_arr_cfx_lwk,

             0 as gross_new_arr_cfx_actuals,
             0 as gross_new_arr_cfx_lq,
             0 as gross_new_arr_cfx_ly,
             0 as gross_new_arr_cfx_lylq,
             sum(gross_new_arr_cfx) as gross_new_arr_cfx_lwk,

             0 as gross_new_subs_actuals,
             0 as gross_new_subs_lq,
             0 as gross_new_subs_ly,
             0 as gross_new_subs_lylq,
             sum(gross_new_subs) as gross_new_subs_lwk,

             0 as init_purchase_arr_cfx_actuals,
             0 as init_purchase_arr_cfx_lq,
             0 as init_purchase_arr_cfx_ly,
             0 as init_purchase_arr_cfx_lylq,
             sum(init_purchase_arr_cfx) as init_purchase_arr_cfx_lwk,

             0 as migrated_from_arr_cfx_actuals,
             0 as migrated_from_arr_cfx_lq,
             0 as migrated_from_arr_cfx_ly,
             0 as migrated_from_arr_cfx_lylq,
             sum(migrated_from_arr_cfx) as migrated_from_arr_cfx_lwk,

             0 as migrated_to_arr_cfx_actuals,
             0 as migrated_to_arr_cfx_lq,
             0 as migrated_to_arr_cfx_ly,
             0 as migrated_to_arr_cfx_lylq,
             sum(migrated_to_arr_cfx) as migrated_to_arr_cfx_lwk,

             0 as net_cancelled_arr_cfx_actuals,
             0 as net_cancelled_arr_cfx_lq,
             0 as net_cancelled_arr_cfx_ly,
             0 as net_cancelled_arr_cfx_lylq,
             sum(net_cancelled_arr_cfx) as net_cancelled_arr_cfx_lwk,
             0 as net_cancelled_arr_cfx_qrf,

             0 as net_new_arr_cfx_actuals,
             0 as net_new_arr_cfx_lq,
             0 as net_new_arr_cfx_ly,
             0 as net_new_arr_cfx_lylq,
             sum(net_new_arr_cfx) as net_new_arr_cfx_lwk,

             0 as net_new_subs_actuals,
             0 as net_new_subs_lq,
             0 as net_new_subs_ly,
             0 as net_new_subs_lylq,
             sum(net_new_subs) as net_new_subs_lwk,

             0 as net_purchases_arr_cfx_actuals,
             0 as net_purchases_arr_cfx_lq,
             0 as net_purchases_arr_cfx_ly,
             0 as net_purchases_arr_cfx_lylq,
             sum(net_purchases_arr_cfx) as net_purchases_arr_cfx_lwk,
             0 as net_purchases_arr_qrf,
             0 as net_purchases_arr_buffer_qrf,

             0 as net_purchases_arr_gt_5K_actuals,
             0 as net_purchases_arr_gt_5K_lq,
             0 as net_purchases_arr_gt_5K_ly,
             0 as net_purchases_arr_gt_5K_lylq,
             sum(net_purchases_arr_gt_5K) as net_purchases_arr_gt_5K_lwk,

             0 as net_purchases_arr_ls_5K_actuals,
             0 as net_purchases_arr_ls_5K_lq,
             0 as net_purchases_arr_ls_5K_ly,
             0 as net_purchases_arr_ls_5K_lylq,
             sum(net_purchases_arr_ls_5K) as net_purchases_arr_ls_5K_lwk,

             0 as orders_gt_5K_actuals,
             0 as orders_gt_5K_lq,
             0 as orders_gt_5K_ly,
             0 as orders_gt_5K_lylq,
             sum(orders_gt_5K)  as orders_gt_5K_lwk,

             0 as orders_ls_5K_actuals,
             0 as orders_ls_5K_lq,
             0 as orders_ls_5K_ly,
             0 as orders_ls_5K_lylq,
             sum(orders_ls_5K) as orders_ls_5K_lwk,

             0 as reactivated_arr_cfx_actuals,
             0 as reactivated_arr_cfx_lq,
             0 as reactivated_arr_cfx_ly,
             0 as reactivated_arr_cfx_lylq,
             sum(reactivated_arr_cfx) as reactivated_arr_cfx_lwk,

             0 as returns_arr_cfx_actuals,
             0 as returns_arr_cfx_lq,
             0 as returns_arr_cfx_ly,
             0 as returns_arr_cfx_lylq,
             sum(returns_arr_cfx) as returns_arr_cfx_lwk,

             0 as renewal_from_arr_cfx_actuals,
             0 as renewal_from_arr_cfx_lq,
             0 as renewal_from_arr_cfx_ly,
             0 as renewal_from_arr_cfx_lylq,
             sum(renewal_from_arr_cfx) as renewal_from_arr_cfx_lwk,

             0 as renewal_to_arr_cfx_actuals,
             0 as renewal_to_arr_cfx_lq,
             0 as renewal_to_arr_cfx_ly,
             0 as renewal_to_arr_cfx_lylq,
             sum(renewal_to_arr_cfx) as renewal_to_arr_cfx_lwk,

             0 as net_purchases_arr_cfx_unclaimed_actuals,
             0 as net_purchases_arr_cfx_unclaimed_lq,
             0 as net_purchases_arr_cfx_unclaimed_ly,
             0 as net_purchases_arr_cfx_unclaimed_lylq,
             sum(net_purchases_arr_cfx_unclaimed) as net_purchases_arr_cfx_unclaimed_lwk,

             0 as gross_new_arr_cfx_unclaimed_actuals,
             0 as gross_new_arr_cfx_unclaimed_lq,
             0 as gross_new_arr_cfx_unclaimed_ly,
             0 as gross_new_arr_cfx_unclaimed_lylq,
             sum(gross_new_arr_cfx_unclaimed) as gross_new_arr_cfx_unclaimed_lwk,

             0 as net_migration_arr_cfx_actuals,
             0 as net_migration_arr_cfx_ly,
             0 as net_migration_arr_cfx_lq,
             0 as net_migration_arr_cfx_lylq,
             sum(net_migration_arr_cfx) as net_migration_arr_cfx_lwk,
             0 as net_migration_arr_qrf,

             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc

             from (
             select a.*,b.standard_team_name,b.Team_category from 
             (select * from df_final where FISCAL_YR_AND_WK_DESC in ({weeks_lwk})) a
             left outer join (select DISTINCT team_key,standard_team_name,Team_category from {STG3_TBL}) b
             on a.TeamKey = b.Team_key
             ) basetbl

             group by 
             fiscal_yr_and_qtr_desc,
             fiscal_yr_and_wk_desc,

             GEO,
             MARKET_AREA,
             market_area_description,
             MARKET_SEGMENT,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             gtm_acct_segment,
             route_to_market,
             PROMOTION,
             PROMO_TYPE,
             SALES_DISTRICT,
             Sales_Center,
             RepName,
             con_RepLdap,
             RepTSM,
             RepManger,
             standard_team_name,
             Team_category,
             Txns,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language,
             Channel,
             Surface_app_id,
             queue,
             queue_type,
             transfer_in_Queue,
             transfer_in_Agent,
             transfer_out_Queue,
             transfer_out_Agent 
             ) base
             left outer join
             df_rtb_lookup rtb
             on base.fiscal_yr_and_wk_desc = rtb.fiscal_yr_and_wk_desc_lwk
             """.format(STG3_TBL=STG3_TBL,weeks_lwk=weeks_lwk))
             df_data_lwk.createOrReplaceTempView("df_data_lwk")

             df_data_qrf = spark.sql("""select 
             case when GEO = 'JAPAN' then 'JPN' else GEO end geo,
             'UNKNOWN' AS market_area,
             'UNKNOWN' AS market_segment,
             'UNKNOWN' AS market_area_description,
             PHONE_VS_WEB AS cc_phone_vs_web,
             'UNKNOWN' AS cc_segment,
             upper(Product_Mapping) AS product_group,
             'UNKNOWN' as  sub_product_group,
             'UNKNOWN' as STYPE,
             'UNKNOWN' AS projected_dme_gtm_segment,
             'UNKNOWN' AS gtm_acct_segment,
             'UNKNOWN' AS route_to_market,
             'UNKNOWN' AS promotion,
             'UNKNOWN' AS promo_type,
             'UNKNOWN' AS sales_district,
             case when upper(trim(Sales_centre)) = 'CNX' then 'EBD' else upper(trim(Sales_centre)) end Sales_Center,
             'UNKNOWN' AS repname,
             'UNKNOWN' AS RepLdap,
             'UNKNOWN' AS reptsm,
             Manager AS repmanger,
             Standard_team_name AS repteam,
             Team_category as Team_category,
             Txn AS transaction_type,
             'UNKNOWN' AS net_purchases_deal_band,
             'UNKNOWN' AS net_cancelled_deal_band,
             'UNKNOWN' AS net_purchases_deal_band_overall,
             'UNKNOWN' AS net_cancelled_deal_band_overall,
             'UNKNOWN' as Language,
             'UNKNOWN' as Channel,
             'UNKNOWN' as Surface_app_id,
             'UNKNOWN' as queue,
             'UNKNOWN' as queue_type,
             'UNKNOWN' as transfer_in_Queue,
             'UNKNOWN' as transfer_in_Agent,
             'UNKNOWN' as transfer_out_Queue,
             'UNKNOWN' as transfer_out_Agent,
             0 as entered_actuals,
             0 as entered_lq,
             0 as entered_ly,
             0 as entered_lylq,
             0 as entered_lwk,
             0 as offered_actuals,
             0 as offered_lq,
             0 as offered_ly,
             0 as offered_lylq,
             0 as offered_lwk,
             0 as accepeted_actuals,
             0 as accepeted_lq,
             0 as accepeted_ly,
             0 as accepeted_lylq,
             0 as accepeted_lwk,
             0 as abandoned_actuals,
             0 as abandoned_lq,
             0 as abandoned_ly,
             0 as abandoned_lylq,
             0 as abandoned_lwk,
             0 as Non_Interactive_actuals,
             0 as Non_Interactive_lq,
             0 as Non_Interactive_ly,
             0 as Non_Interactive_lylq,
             0 as Non_Interactive_lwk,
             0 as Wrap_time_min_actuals,
             0 as Wrap_time_min_lq,
             0 as Wrap_time_min_ly,
             0 as Wrap_time_min_lylq,
             0 as Wrap_time_min_lwk,
             0 as Talk_time_min_actuals,
             0 as Talk_time_min_lq,
             0 as Talk_time_min_ly,
             0 as Talk_time_min_lylq,
             0 as Talk_time_min_lwk,
             0 as transfer_in_actuals,
             0 as transfer_in_lq,
             0 as transfer_in_ly,
             0 as transfer_in_lylq,
             0 as transfer_in_lwk,
             0 as transfer_out_actuals,
             0 as transfer_out_lq,
             0 as transfer_out_ly,
             0 as transfer_out_lylq,
             0 as transfer_out_lwk,
             0 as incremental_arr_actuals,
             0 as incremental_arr_lq,
             0 as incremental_arr_ly,
             0 as incremental_arr_lylq,
             0 as incremental_arr_lwk,
             0 as Incremental_arr_customer_addon_actuals,
             0 as Incremental_arr_customer_addon_lq,
             0 as Incremental_arr_customer_addon_ly,
             0 as Incremental_arr_customer_addon_lylq,
             0 as Incremental_arr_customer_addon_lwk,
             0 AS addl_purchase_diff_actuals,
             0 AS addl_purchase_diff_lq,
             0 AS addl_purchase_diff_ly,
             0 AS addl_purchase_diff_lylq,
             0 AS addl_purchase_diff_lwk,
             0 AS addl_purchase_same_actuals,
             0 AS addl_purchase_same_lq,
             0 AS addl_purchase_same_ly,
             0 AS addl_purchase_same_lylq,
             0 AS addl_purchase_same_lwk,
             0 AS gross_cancel_arr_cfx_actuals,
             0 AS gross_cancel_arr_cfx_lq,
             0 AS gross_cancel_arr_cfx_ly,
             0 AS gross_cancel_arr_cfx_lylq,
             0 AS gross_cancel_arr_cfx_lwk,
             0 AS gross_new_arr_cfx_actuals,
             0 AS gross_new_arr_cfx_lq,
             0 AS gross_new_arr_cfx_ly,
             0 AS gross_new_arr_cfx_lylq,
             0 AS gross_new_arr_cfx_lwk,
             0 AS gross_new_subs_actuals,
             0 AS gross_new_subs_lq,
             0 AS gross_new_subs_ly,
             0 AS gross_new_subs_lylq,
             0 AS gross_new_subs_lwk,
             0 AS init_purchase_arr_cfx_actuals,
             0 AS init_purchase_arr_cfx_lq,
             0 AS init_purchase_arr_cfx_ly,
             0 AS init_purchase_arr_cfx_lylq,
             0 AS init_purchase_arr_cfx_lwk,
             0 AS migrated_from_arr_cfx_actuals,
             0 AS migrated_from_arr_cfx_lq,
             0 AS migrated_from_arr_cfx_ly,
             0 AS migrated_from_arr_cfx_lylq,
             0 AS migrated_from_arr_cfx_lwk,
             0 AS migrated_to_arr_cfx_actuals,
             0 AS migrated_to_arr_cfx_lq,
             0 AS migrated_to_arr_cfx_ly,
             0 AS migrated_to_arr_cfx_lylq,
             0 AS migrated_to_arr_cfx_lwk,
             0 AS net_cancelled_arr_cfx_actuals,
             0 AS net_cancelled_arr_cfx_lq,
             0 AS net_cancelled_arr_cfx_ly,
             0 AS net_cancelled_arr_cfx_lylq,
             0 AS net_cancelled_arr_cfx_lwk,
             SUM(CANCEL) AS net_cancelled_arr_cfx_qrf,
             0 AS net_new_arr_cfx_actuals,
             0 AS net_new_arr_cfx_lq,
             0 AS net_new_arr_cfx_ly,
             0 AS net_new_arr_cfx_lylq,
             0 AS net_new_arr_cfx_lwk,
             0 AS net_new_subs_actuals,
             0 AS net_new_subs_lq,
             0 AS net_new_subs_ly,
             0 AS net_new_subs_lylq,
             0 AS net_new_subs_lwk,
             0 AS net_purchases_arr_cfx_actuals,
             0 AS net_purchases_arr_cfx_lq,
             0 AS net_purchases_arr_cfx_ly,
             0 AS net_purchases_arr_cfx_lylq,
             0 AS net_purchases_arr_cfx_lwk,
             sum(GROSS) AS net_purchases_arr_qrf,
             sum(Buffer) AS net_purchases_arr_buffer_qrf,
             0 AS net_purchases_arr_gt_5K_actuals,
             0 AS net_purchases_arr_gt_5K_lq,
             0 AS net_purchases_arr_gt_5K_ly,
             0 AS net_purchases_arr_gt_5K_lylq,
             0 AS net_purchases_arr_gt_5K_lwk,
             0 AS net_purchases_arr_ls_5K_actuals,
             0 AS net_purchases_arr_ls_5K_lq,
             0 AS net_purchases_arr_ls_5K_ly,
             0 AS net_purchases_arr_ls_5K_lylq,
             0 AS net_purchases_arr_ls_5K_lwk,

             0 AS orders_gt_5K_actuals,
             0 AS orders_gt_5K_lq,
             0 AS orders_gt_5K_ly,
             0 AS orders_gt_5K_lylq,
             0 AS orders_gt_5K_lwk,

             0 AS orders_ls_5K_actuals,
             0 AS orders_ls_5K_lq,
             0 AS orders_ls_5K_ly,
             0 AS orders_ls_5K_lylq,
             0 AS orders_ls_5K_lwk,

             0 AS reactivated_arr_cfx_actuals,
             0 AS reactivated_arr_cfx_lq,
             0 AS reactivated_arr_cfx_ly,
             0 AS reactivated_arr_cfx_lylq,
             0 AS reactivated_arr_cfx_lwk,
             0 AS returns_arr_cfx_actuals,
             0 AS returns_arr_cfx_lq,
             0 AS returns_arr_cfx_ly,
             0 AS returns_arr_cfx_lylq,
             0 AS returns_arr_cfx_lwk,
             0 AS renewal_from_arr_cfx_actuals,
             0 AS renewal_from_arr_cfx_lq,
             0 AS renewal_from_arr_cfx_ly,
             0 AS renewal_from_arr_cfx_lylq,
             0 AS renewal_from_arr_cfx_lwk,
             0 AS renewal_to_arr_cfx_actuals,
             0 AS renewal_to_arr_cfx_lq,
             0 AS renewal_to_arr_cfx_ly,
             0 AS renewal_to_arr_cfx_lylq,
             0 AS renewal_to_arr_cfx_lwk,
             0 as net_purchases_arr_cfx_unclaimed_actuals,
             0 as net_purchases_arr_cfx_unclaimed_lq,
             0 as net_purchases_arr_cfx_unclaimed_ly,
             0 as net_purchases_arr_cfx_unclaimed_lylq,
             0 as net_purchases_arr_cfx_unclaimed_lwk,
             0 as gross_new_arr_cfx_unclaimed_actuals,
             0 as gross_new_arr_cfx_unclaimed_lq,
             0 as gross_new_arr_cfx_unclaimed_ly,
             0 as gross_new_arr_cfx_unclaimed_lylq,
             0 as gross_new_arr_cfx_unclaimed_lwk,
             0 as net_migration_arr_cfx_actuals,
             0 as net_migration_arr_cfx_ly,
             0 as net_migration_arr_cfx_lq,
             0 as net_migration_arr_cfx_lylq,
             0 as net_migration_arr_cfx_lwk,
             sum(MIGRATION) as net_migration_arr_qrf,
             Fiscal_WK AS fiscal_yr_and_wk_desc,
             Quarter AS fiscal_yr_and_qtr_desc 
             from {QRF_TBL}
             group by 
             KPI,
             Fiscal_WK,
             Geo,
             Final_Team,
             Process,
             PHONE_VS_WEB,
             Product_Mapping,
             Sales_Center,
             Team_grouping,
             repmanger,
             TSM,
             Rep,
             Standard_team_name,
             Team_category,
             Txn,
             Quarter """.format(QRF_TBL = QRF_TBL))
             df_data_qrf.createOrReplaceTempView("df_data_qrf")


             df_all_qtr =  spark.sql("""
             select * from df_data_cq
             union 
             select * from df_data_lq
             union
             select * from df_data_ly
             union
             select * from df_data_lylq 
             union
             select * from df_data_lwk
             union
             select * from df_data_qrf
             """)
             df_all_qtr.createOrReplaceTempView("df_all_qtr")

             df_final_all =  spark.sql("""
             select 
             geo,
             market_area,
             market_area_description,
             market_segment,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             gtm_acct_segment,
             route_to_market,
             promotion,
             promo_type,
             sales_district,
             case 
             when sales_center = 'NULL' then 'UNKNOWN' else sales_center end sales_center,
             case
             when repname = 'NULL' then 'UNKNOWN' else repname end repname,
             RepLdap,
             reptsm,
             case
             when repmanger = 'NULL' then 'UNKNOWN' else repmanger end repmanger,
             repteam,
             Team_category,
             transaction_type,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language,
             Channel,
             Surface_app_id,
             queue,
             queue_type,
             transfer_in_Queue,
             transfer_in_Agent,
             transfer_out_Queue,
             transfer_out_Agent,

             sum(entered_actuals) as entered_actuals,
             sum(entered_lq)  as entered_lq,
             sum(entered_ly)  as entered_ly,
             sum(entered_lylq)  as entered_lylq,
             sum(entered_lwk) as entered_lwk,

             sum(offered_actuals)  as offered_actuals,
             sum(offered_lq)  as offered_lq,
             sum(offered_ly)  as offered_ly,
             sum(offered_lylq)  as offered_lylq,
             sum(offered_lwk) as offered_lwk,

             sum(accepeted_actuals)  as accepeted_actuals,
             sum(accepeted_lq)  as accepeted_lq,
             sum(accepeted_ly)  as accepeted_ly,
             sum(accepeted_lylq)  as accepeted_lylq,
             sum(accepeted_lwk) as accepeted_lwk,

             sum(abandoned_actuals)  as abandoned_actuals,
             sum(abandoned_lq)  as abandoned_lq,
             sum(abandoned_ly)  as abandoned_ly,
             sum(abandoned_lylq)  as abandoned_lylq,
             sum(abandoned_lwk) as abandoned_lwk,

             sum(Non_Interactive_actuals)  as Non_Interactive_actuals,
             sum(Non_Interactive_lq)  as Non_Interactive_lq,
             sum(Non_Interactive_ly)  as Non_Interactive_ly,
             sum(Non_Interactive_lylq)  as Non_Interactive_lylq,
             sum(Non_Interactive_lwk) as Non_Interactive_lwk,

             sum(Wrap_time_min_actuals) as Wrap_time_min_actuals,
             sum(Wrap_time_min_lq)  as Wrap_time_min_lq,
             sum(Wrap_time_min_ly)  as Wrap_time_min_ly,
             sum(Wrap_time_min_lylq)  as Wrap_time_min_lylq,
             sum(Wrap_time_min_lwk) as Wrap_time_min_lwk,

             sum(Talk_time_min_actuals)  as Talk_time_min_actuals,
             sum(Talk_time_min_lq)  as Talk_time_min_lq,
             sum(Talk_time_min_ly)  as Talk_time_min_ly,
             sum(Talk_time_min_lylq)  as Talk_time_min_lylq,
             sum(Talk_time_min_lwk) as Talk_time_min_lwk,

             sum(transfer_in_actuals) as transfer_in_actuals,
             sum(transfer_in_lq) as transfer_in_lq,
             sum(transfer_in_ly) as transfer_in_ly,
             sum(transfer_in_lylq) as transfer_in_lylq,
             sum(transfer_in_lwk) as transfer_in_lwk,

             sum(transfer_out_actuals) as transfer_out_actuals,
             sum(transfer_out_lq) as transfer_out_lq,
             sum(transfer_out_ly) as transfer_out_ly,
             sum(transfer_out_lylq) as transfer_out_lylq,
             sum(transfer_out_lwk) as transfer_out_lwk,

             sum(incremental_arr_actuals) as incremental_arr_actuals,
             sum(incremental_arr_lq) as incremental_arr_lq,
             sum(incremental_arr_ly) as incremental_arr_ly,
             sum(incremental_arr_lylq) as incremental_arr_lylq,
             sum(incremental_arr_lwk) as incremental_arr_lwk,

             sum(Incremental_arr_customer_addon_actuals) as Incremental_arr_customer_addon_actuals,
             sum(Incremental_arr_customer_addon_lq) as Incremental_arr_customer_addon_lq,
             sum(Incremental_arr_customer_addon_ly) as Incremental_arr_customer_addon_ly,
             sum(Incremental_arr_customer_addon_lylq) as Incremental_arr_customer_addon_lylq,
             sum(Incremental_arr_customer_addon_lwk) as Incremental_arr_customer_addon_lwk,

             sum(addl_purchase_diff_actuals) as addl_purchase_diff_actuals,
             sum(addl_purchase_diff_lq) as addl_purchase_diff_lq,
             sum(addl_purchase_diff_ly) as addl_purchase_diff_ly,
             sum(addl_purchase_diff_lylq) as addl_purchase_diff_lylq,
             sum(addl_purchase_diff_lwk) as addl_purchase_diff_lwk,

             sum(addl_purchase_same_actuals) as addl_purchase_same_actuals,
             sum(addl_purchase_same_lq) as addl_purchase_same_lq,
             sum(addl_purchase_same_ly) as addl_purchase_same_ly,
             sum(addl_purchase_same_lylq) as addl_purchase_same_lylq,
             sum(addl_purchase_same_lwk) as addl_purchase_same_lwk,

             sum(gross_cancel_arr_cfx_actuals) as gross_cancel_arr_cfx_actuals,
             sum(gross_cancel_arr_cfx_lq) as gross_cancel_arr_cfx_lq,
             sum(gross_cancel_arr_cfx_ly) as gross_cancel_arr_cfx_ly,
             sum(gross_cancel_arr_cfx_lylq) as gross_cancel_arr_cfx_lylq,
             sum(gross_cancel_arr_cfx_lwk) as gross_cancel_arr_cfx_lwk,

             sum(gross_new_arr_cfx_actuals) as gross_new_arr_cfx_actuals,
             sum(gross_new_arr_cfx_lq) as gross_new_arr_cfx_lq,
             sum(gross_new_arr_cfx_ly) as gross_new_arr_cfx_ly,
             sum(gross_new_arr_cfx_lylq) as gross_new_arr_cfx_lylq,
             sum(gross_new_arr_cfx_lwk) as gross_new_arr_cfx_lwk,

             sum(gross_new_subs_actuals) as gross_new_subs_actuals,
             sum(gross_new_subs_lq) as gross_new_subs_lq,
             sum(gross_new_subs_ly) as gross_new_subs_ly,
             sum(gross_new_subs_lylq) as gross_new_subs_lylq,
             sum(gross_new_subs_lwk) as gross_new_subs_lwk,

             sum(init_purchase_arr_cfx_actuals) as init_purchase_arr_cfx_actuals,
             sum(init_purchase_arr_cfx_lq) as init_purchase_arr_cfx_lq,
             sum(init_purchase_arr_cfx_ly) as init_purchase_arr_cfx_ly,
             sum(init_purchase_arr_cfx_lylq) as init_purchase_arr_cfx_lylq,
             sum(init_purchase_arr_cfx_lwk) as init_purchase_arr_cfx_lwk,

             sum(migrated_from_arr_cfx_actuals) as migrated_from_arr_cfx_actuals,
             sum(migrated_from_arr_cfx_lq) as migrated_from_arr_cfx_lq,
             sum(migrated_from_arr_cfx_ly) as migrated_from_arr_cfx_ly,
             sum(migrated_from_arr_cfx_lylq) as migrated_from_arr_cfx_lylq,
             sum(migrated_from_arr_cfx_lwk) as migrated_from_arr_cfx_lwk,

             sum(migrated_to_arr_cfx_actuals) as migrated_to_arr_cfx_actuals,
             sum(migrated_to_arr_cfx_lq) as migrated_to_arr_cfx_lq,
             sum(migrated_to_arr_cfx_ly) as migrated_to_arr_cfx_ly,
             sum(migrated_to_arr_cfx_lylq) as migrated_to_arr_cfx_lylq,
             sum(migrated_to_arr_cfx_lwk) as migrated_to_arr_cfx_lwk,

             sum(net_cancelled_arr_cfx_actuals) as net_cancelled_arr_cfx_actuals,
             sum(net_cancelled_arr_cfx_lq) as net_cancelled_arr_cfx_lq,
             sum(net_cancelled_arr_cfx_ly) as net_cancelled_arr_cfx_ly,
             sum(net_cancelled_arr_cfx_lylq) as net_cancelled_arr_cfx_lylq,
             sum(net_cancelled_arr_cfx_lwk) as net_cancelled_arr_cfx_lwk,
             sum(net_cancelled_arr_cfx_qrf) as net_cancelled_arr_cfx_qrf,

             sum(net_new_arr_cfx_actuals) as net_new_arr_cfx_actuals,
             sum(net_new_arr_cfx_lq) as net_new_arr_cfx_lq,
             sum(net_new_arr_cfx_ly) as net_new_arr_cfx_ly,
             sum(net_new_arr_cfx_lylq) as net_new_arr_cfx_lylq,
             sum(net_new_arr_cfx_lwk) as net_new_arr_cfx_lwk,

             sum(net_new_subs_actuals) as net_new_subs_actuals,
             sum(net_new_subs_lq) as net_new_subs_lq,
             sum(net_new_subs_ly) as net_new_subs_ly,
             sum(net_new_subs_lylq) as net_new_subs_lylq,
             sum(net_new_subs_lwk) as net_new_subs_lwk,

             sum(net_purchases_arr_cfx_actuals) as net_purchases_arr_cfx_actuals,
             sum(net_purchases_arr_cfx_lq) as net_purchases_arr_cfx_lq,
             sum(net_purchases_arr_cfx_ly) as net_purchases_arr_cfx_ly,
             sum(net_purchases_arr_cfx_lylq) as net_purchases_arr_cfx_lylq,
             sum(net_purchases_arr_cfx_lwk) as net_purchases_arr_cfx_lwk,
             sum(net_purchases_arr_qrf) as net_purchases_arr_qrf,
             sum(net_purchases_arr_buffer_qrf) as net_purchases_arr_buffer_qrf,

             sum(net_purchases_arr_gt_5K_actuals) as net_purchases_arr_gt_5K_actuals,
             sum(net_purchases_arr_gt_5K_lq) as net_purchases_arr_gt_5K_lq,
             sum(net_purchases_arr_gt_5K_ly) as net_purchases_arr_gt_5K_ly,
             sum(net_purchases_arr_gt_5K_lylq) as net_purchases_arr_gt_5K_lylq,
             sum(net_purchases_arr_gt_5K_lwk) as net_purchases_arr_gt_5K_lwk,

             sum(net_purchases_arr_ls_5K_actuals) as net_purchases_arr_ls_5K_actuals,
             sum(net_purchases_arr_ls_5K_lq) as net_purchases_arr_ls_5K_lq,
             sum(net_purchases_arr_ls_5K_ly) as net_purchases_arr_ls_5K_ly,
             sum(net_purchases_arr_ls_5K_lylq) as net_purchases_arr_ls_5K_lylq,
             sum(net_purchases_arr_ls_5K_lwk) as net_purchases_arr_ls_5K_lwk,

             sum(orders_gt_5K_actuals) as orders_gt_5K_actuals,
             sum(orders_gt_5K_lq) as orders_gt_5K_lq,
             sum(orders_gt_5K_ly) as orders_gt_5K_ly,
             sum(orders_gt_5K_lylq) as orders_gt_5K_lylq,
             sum(orders_gt_5K_lwk) as orders_gt_5K_lwk,

             sum(orders_ls_5K_actuals) as orders_ls_5K_actuals,
             sum(orders_ls_5K_lq) as orders_ls_5K_lq,
             sum(orders_ls_5K_ly) as orders_ls_5K_ly,
             sum(orders_ls_5K_lylq) as orders_ls_5K_lylq,
             sum(orders_ls_5K_lwk) as orders_ls_5K_lwk,


             sum(reactivated_arr_cfx_actuals) as reactivated_arr_cfx_actuals,
             sum(reactivated_arr_cfx_lq) as reactivated_arr_cfx_lq,
             sum(reactivated_arr_cfx_ly) as reactivated_arr_cfx_ly,
             sum(reactivated_arr_cfx_lylq) as reactivated_arr_cfx_lylq,
             sum(reactivated_arr_cfx_lwk) as reactivated_arr_cfx_lwk,

             sum(returns_arr_cfx_actuals) as returns_arr_cfx_actuals,
             sum(returns_arr_cfx_lq) as returns_arr_cfx_lq,
             sum(returns_arr_cfx_ly) as returns_arr_cfx_ly,
             sum(returns_arr_cfx_lylq) as returns_arr_cfx_lylq,
             sum(returns_arr_cfx_lwk) as returns_arr_cfx_lwk,

             sum(renewal_from_arr_cfx_actuals) as renewal_from_arr_cfx_actuals,
             sum(renewal_from_arr_cfx_lq) as renewal_from_arr_cfx_lq,
             sum(renewal_from_arr_cfx_ly) as renewal_from_arr_cfx_ly,
             sum(renewal_from_arr_cfx_lylq) as renewal_from_arr_cfx_lylq,
             sum(renewal_from_arr_cfx_lwk) as renewal_from_arr_cfx_lwk,

             sum(renewal_to_arr_cfx_actuals) as renewal_to_arr_cfx_actuals,
             sum(renewal_to_arr_cfx_lq) as renewal_to_arr_cfx_lq,
             sum(renewal_to_arr_cfx_ly) as renewal_to_arr_cfx_ly,
             sum(renewal_to_arr_cfx_lylq) as renewal_to_arr_cfx_lylq,
             sum(renewal_to_arr_cfx_lwk) as renewal_to_arr_cfx_lwk,

             sum(net_purchases_arr_cfx_unclaimed_actuals) as net_purchases_arr_cfx_unclaimed_actuals,
             sum(net_purchases_arr_cfx_unclaimed_lq) as net_purchases_arr_cfx_unclaimed_lq,
             sum(net_purchases_arr_cfx_unclaimed_ly) as net_purchases_arr_cfx_unclaimed_ly,
             sum(net_purchases_arr_cfx_unclaimed_lylq) as net_purchases_arr_cfx_unclaimed_lylq,
             sum(net_purchases_arr_cfx_unclaimed_lwk) as net_purchases_arr_cfx_unclaimed_lwk,

             sum(gross_new_arr_cfx_unclaimed_actuals) as gross_new_arr_cfx_unclaimed_actuals,
             sum(gross_new_arr_cfx_unclaimed_lq) as gross_new_arr_cfx_unclaimed_lq,
             sum(gross_new_arr_cfx_unclaimed_ly) as gross_new_arr_cfx_unclaimed_ly,
             sum(gross_new_arr_cfx_unclaimed_lylq) as gross_new_arr_cfx_unclaimed_lylq,
             sum(gross_new_arr_cfx_unclaimed_lwk) as gross_new_arr_cfx_unclaimed_lwk,

             sum(net_migration_arr_cfx_actuals) as net_migration_arr_cfx_actuals,
             sum(net_migration_arr_cfx_ly) as net_migration_arr_cfx_ly,
             sum(net_migration_arr_cfx_lq) as net_migration_arr_cfx_lq,
             sum(net_migration_arr_cfx_lylq) as net_migration_arr_cfx_lylq,
             sum(net_migration_arr_cfx_lwk) as net_migration_arr_cfx_lwk,
             sum(net_migration_arr_qrf) as net_migration_arr_qrf,
             
             from_utc_timestamp(current_timestamp(), 'America/Los_Angeles') as refresh_date,

             fiscal_yr_and_wk_desc,
             fiscal_yr_and_qtr_desc

             from df_all_qtr
             group by 
             fiscal_yr_and_wk_desc,
             fiscal_yr_and_qtr_desc,

             geo,
             market_area,
             market_area_description,
             market_segment,
             cc_phone_vs_web,
             cc_segment,
             product_group,
             sub_product_group,
             STYPE,
             projected_dme_gtm_segment,
             gtm_acct_segment,
             route_to_market,
             promotion,
             promo_type,
             sales_district,
             sales_center,
             repname,
             RepLdap,
             reptsm,
             repmanger,
             repteam,
             Team_category,
             transaction_type,
             net_purchases_deal_band,
             net_cancelled_deal_band,
             net_purchases_deal_band_overall,
             net_cancelled_deal_band_overall,
             Language,
             Channel,
             Surface_app_id,
             queue,
             queue_type,
             transfer_in_Queue,
             transfer_in_Agent,
             transfer_out_Queue,
             transfer_out_Agent 
             """)
             df_final_all.createOrReplaceTempView("df_final_all")

             df_final_all.repartition("fiscal_yr_and_wk_desc","fiscal_yr_and_qtr_desc").write.format("parquet").mode("overwrite").insertInto("%s"%TGT1_TBL,overwrite=True)
             spark.sql(f"msck repair table {TGT1_TBL}")

             try:
                 dbutils.notebook.exit("SUCCESS")   
             except Exception as e:                 
                 print("exception:",e)
        except Exception as e:
             dbutils.notebook.exit(e)

if __name__ == '__main__': 
        main()
